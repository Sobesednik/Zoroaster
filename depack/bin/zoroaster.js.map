{
"version":3,
"file":"depack/bin/zoroaster.js",
"lineCount":1215,
"mappings":"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",
"sources":["node_modules/os/index.js","node_modules/@artdeco/clean-stack/src/index.js","node_modules/argufy/src/index.js","src/bin/zoroaster.js","src/bin/get-args.js","node_modules/path/index.js","node_modules/fs/index.js","node_modules/stream/index.js","node_modules/erotic/src/lib.js","node_modules/erotic/src/callback.js","node_modules/erotic/src/index.js","node_modules/catchment/src/lib/index.js","node_modules/catchment/src/index.js","node_modules/erte/src/diff.js","node_modules/erte/src/index.js","src/lib/index.js","src/lib/stream.js","node_modules/makepromise/src/index.js","node_modules/promto/src/index.js","node_modules/@zoroaster/reducer/src/lib/index.js","node_modules/@zoroaster/reducer/src/lib/run-test.js","node_modules/@zoroaster/reducer/src/lib/reducer.js","node_modules/assert/index.js","node_modules/readline/index.js","node_modules/reloquent/src/lib/ask.js","node_modules/reloquent/src/lib/ask-questions.js","node_modules/reloquent/src/index.js","node_modules/util/index.js","node_modules/differently/src/index.js","node_modules/@wrote/read/src/index.js","node_modules/@wrote/write/src/index.js","node_modules/@wrote/ensure-path/src/index.js","node_modules/paddys/src/index.js","node_modules/frame-of-mind/src/index.js","node_modules/snapshot-context/src/index.js","node_modules/@zoroaster/deep-equal/src/index.js","node_modules/@wrote/exists/src/index.js","node_modules/@wrote/read-dir-structure/src/index.js","node_modules/@wrote/rm/src/index.js","src/lib/snapshot.js","src/lib/run-test.js","src/lib/Test.js","src/lib/TestSuite.js","src/lib/bin.js","src/lib/run.js","node_modules/usually/src/index.js","src/bin/usage.js"],
"sourcesContent":["export default os\nexport const {\n  EOL,\n  arch,\n  constants,\n  cpus,\n  endianness,\n  freemem,\n  homedir,\n  hostname,\n  loadavg,\n  networkInterfaces,\n  platform,\n  release,\n  tmpdir,\n  totalmem,\n  type,\n  uptime,\n  userInfo,\n} = os","import { homedir } from 'os'\n\nconst extractPathRegex = /\\s+at.*(?:\\(|\\s)(.*)\\)?/\nconst pathRegex = /^(?:(?:(?:node|(?:internal\\/[\\w/]*|.*node_modules\\/(?:IGNORED_MODULES)\\/.*)?\\w+)\\.js:\\d+:\\d+)|native)/\n\nconst homeDir = homedir()\n\n/**\n * Remove internal Node.JS lines from the error stack traces.\n * @param {string} stack The error stack to update.\n * @param {!_cleanStack.Config} [options] Options for the program.\n * @param {boolean} [options.pretty=false] Replace the absolute path to the home directory with the `~`. Default `false`.\n * @param {!Array<string>} [options.ignoredModules=\"\uff3b'pirates'\uff3d\"] Which modules to ignore in the path. Default `\uff3b'pirates'\uff3d`.\n */\nconst cleanStack = (stack, options) => {\n  const {\n    pretty = false, ignoredModules = ['pirates'],\n  } = options || {}\n  const j = ignoredModules.join('|')\n  const re = new RegExp(pathRegex.source.replace('IGNORED_MODULES', j))\n\n  return stack.replace(/\\\\/g, '/')\n    .split('\\n')\n    .filter(x => {\n      const pathMatches = x.match(extractPathRegex)\n      if (pathMatches === null || !pathMatches[1]) {\n        return true\n      }\n\n      const match = pathMatches[1]\n\n      // Electron\n      if (match.includes('.app/Contents/Resources/electron.asar') ||\n        match.includes('.app/Contents/Resources/default_app.asar')) {\n        return false\n      }\n\n      return !re.test(match)\n    })\n    .filter(x => x.trim())\n    .map(x => {\n      if (pretty) {\n        return x.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')))\n      }\n\n      return x\n    })\n    .join('\\n')\n}\n\nexport default cleanStack\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_cleanStack.Config} Config Options for the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _cleanStack.Config Options for the program.\n * @prop {boolean} [pretty=false] Replace the absolute path to the home directory with the `~`. Default `false`.\n * @prop {!Array<string>} [ignoredModules=\"\uff3b'pirates'\uff3d\"] Which modules to ignore in the path. Default `\uff3b'pirates'\uff3d`.\n */\n","/**\n * @param {Array<string>} argv\n * @param {string} long\n * @param {string} [short]\n * @param {boolean} [bool]\n * @param {boolean} [number]\n */\nconst find = (argv, long, short, bool = false, number = false) => {\n  const re = short ? new RegExp(`^-(${short}|-${long})`)\n    : new RegExp(`^--${long}`)\n  const i = argv.findIndex(a => re.test(a))\n  if (i == -1) return { argv }\n\n  if (bool) {\n    return {\n      value: true,\n      argv: [\n        ...argv.slice(0, i),\n        ...argv.slice(i + 1),\n      ],\n    }\n  }\n\n  const j = i + 1\n  let value = argv[j]\n\n  if (!value || (typeof value == 'string' && value.startsWith('--'))) return { argv }\n\n  if (number) {\n    value = parseInt(value, 10)\n  }\n  return {\n    value,\n    argv: [\n      ...argv.slice(0, i),\n      ...argv.slice(j + 1),\n    ],\n  }\n}\n\n/**\n * Parse the config and extract arguments from the `process.argv` array.\n * @param {!_argufy.Config} config The configuration for parsing, where each key is a flag name and values are either strings, or objects with possible properties:\n *\n * - __short__ Shorthand for this argument, usually one letter.\n * - __boolean__ Does not have to be followed by a value, true if given.\n * - __number__ Parse as a number.\n * - __command__ Whether this argument can be specified as the first argument without the dash, such as `example run`.\n * - __multiple__ Extract multiple commands as an  array when `command` is set to true.\n *\n * @example\n```\nconst config = {\n  title: 't',       // program -t Title\n  open: {           // program -o\n    short: 'o',\n    boolean: true,\n  },\n  delay: {          // program -d 100\n    short: 'd',\n    number: true,\n  },\n  file: {           // program File.txt\n    command: true,\n  },\n  file2: {           // program File.txt File2.txt\n    command: true,\n    multiple: true,\n  },\n}\n```\n * @param {!Array<string>} [args] Array with arguments to parse. `process.argv` is used by default. It is assumed that user arguments start from the 3rd position.\n * @returns {Object<string, string|Array<string>|boolean|number>} An object with all found values for the configuration request.\n */\nexport default function argufy(config = {}, args = process.argv) {\n  let [, , ...argv] = args\n  const titles = findTitles(argv)\n  argv = argv.slice(titles.length)\n  let commandFound = !titles.length\n  const res = Object.keys(config).reduce(({ _argv, ...acc }, key) => {\n    if (_argv.length == 0 && commandFound) return { _argv, ...acc }\n    const val = config[key]\n    let value\n    if (typeof val == 'string') {\n      ({ value, argv: _argv } = find(_argv, key, val))\n    } else {\n      try {\n        const { short, boolean, number, command, multiple } = val\n        if (command && multiple && titles.length) {\n          value = titles\n          commandFound = true\n        } else if (command && titles.length) {\n          value = titles[0]\n          commandFound = true\n        } else {\n          ({ value, argv: _argv } = find(_argv, key, short, boolean, number))\n        }\n      } catch (err) {\n        return { _argv, ...acc }\n      }\n    }\n    if (value === undefined) return { _argv, ...acc }\n    const r = { _argv, ...acc, [key]: value }\n    return r\n  }, {\n    _argv: argv,\n  })\n  return res\n}\n\n/** @param {!Array<string>} argv */\nconst findTitles = argv => {\n  const titles = []\n  for (let i = 0; i < argv.length; i++) {\n    const a = argv[i]\n    if (a.startsWith('-')) break\n    titles.push(a)\n  }\n  return titles\n}\n\n/**\n * Based on the argufy config, creates an object that can be passed to `usually`.\n * @param {!_argufy.Config} argsConfig The configuration for parsing, where each key is a flag name and values are either strings, or objects with possible properties:\n * @example\n```\n{ 'input': 'The input to the program',\n  '--output, -o': 'The output of the program', }\n```\n */\nexport const reduceUsage = (argsConfig) => {\n  const a = Object.keys(argsConfig).reduce((acc, key) => {\n    const val = argsConfig[key]\n    if (typeof val == 'string') {\n      const k = `-${val}`\n      acc[k] = ''\n      return acc\n    }\n    let k = val.command ? key : `--${key}`\n    if (val.short) k = `${k}, -${val.short}`\n    let d = val.description\n    if (val.default) d = `${d}\\nDefault: ${val.default}.`\n    acc[k] = d\n    return acc\n  }, {})\n  return a\n}\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_argufy.Config} Config The configuration for parsing, where each key is a flag name and values are either strings, or objects with possible properties:\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object<string, string|!_argufy.Flag>} _argufy.Config The configuration for parsing, where each key is a flag name and values are either strings, or objects with possible properties:\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_argufy.Flag} Flag The flag passed to the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _argufy.Flag The flag passed to the program.\n * @prop {string} [short] Shorthand for this argument, usually one letter.\n * @prop {boolean} [boolean=false] Whether the flag is a boolean and does not require a value. Default `false`.\n * @prop {boolean} [number=false] Specifies whether the flag should be parsed as a number. Default `false`.\n * @prop {boolean} [command=false] If set to true, the value is read from the first argument passed to the CLI command (e.g., `$ cli command`). Default `false`.\n * @prop {boolean} [multiple=false] When using the `command` property, will parse the commands as an array. Default `false`.\n * @prop {string} [default] The default value for the argument. Does not actually set the value, only used in reducing the usage info (`argufy` bin on the other hand will set the default).\n * @prop {string} [description] The description to be used by `usually`.\n */\n","#!/usr/bin/env node\nimport cleanStack from '@artdeco/clean-stack'\nimport { _version, _help, _alamode, _babel, _tests, _argv, _watch, _timeout, _snapshot, _snapshotRoot, _interactive, argsConfig } from './get-args'\nimport { reduceUsage } from 'argufy'\nimport { resolve } from 'path'\nimport run from '../lib/run'\nimport getUsage from './usage'\n\nif (_version) {\n  console.log(require('../../package.json').version)\n  process.exit()\n} else if (_help) {\n  const usage = getUsage(reduceUsage(argsConfig))\n  console.log(usage)\n  process.exit()\n}\n\nif (_babel) {\n  try {\n    require(/* ok static-analysis */ '@babel/register')\n  } catch (err) {\n    const p = resolve(process.cwd(), 'node_modules/@babel/register')\n    require(p)\n  }\n}\n\nif (_alamode) {\n  require(/* ok static-analysis */ 'alamode')()\n}\n\n(async () => {\n  try {\n    await run({\n      paths: [..._tests || [], ..._argv],\n      watch: _watch,\n      timeout: _timeout,\n      snapshot: _snapshot,\n      snapshotRoot: _snapshotRoot.split(','),\n      interactive: _interactive,\n    })\n  } catch (error) {\n    console.log(cleanStack(error.stack)) // eslint-disable-line no-console\n    process.exit(1)\n  }\n})()","import argufy from 'argufy'\n\nexport const argsConfig = {\n  'tests': {\n    description: 'The location of the test suite directory or file.',\n    command: true,\n    multiple: true,\n  },\n  'alamode': {\n    description: 'Enable import/export transpilation with \u00c0LaMode.',\n    boolean: true,\n    short: 'a',\n  },\n  'babel': {\n    description: 'Require `@babel/register` (needs to be installed).',\n    boolean: true,\n    short: 'b',\n  },\n  'watch': {\n    description: 'Start the runner in _watch_ mode (rerun on changes).',\n    boolean: true,\n    short: 'w',\n  },\n  'timeout': {\n    description: 'Timeout for tests in ms.',\n    number: true,\n    default: '2000',\n    short: 't',\n  },\n  'snapshot': {\n    description: 'The location of the snapshot dir.',\n    default: 'test/snapshot',\n    short: 's',\n  },\n  'snapshotRoot': {\n    description: 'The list of folders that will be roots in the snapshot dir.',\n    default: 'test/spec,test/mask',\n    short: 'r',\n  },\n  'interactive': {\n    description: 'Run in interactive mode, allowing to update snapshots\\nand mask results when they don\\'t match currently expected.',\n    boolean: true,\n    short: 'i',\n  },\n  'version': {\n    description: 'Show the current version.',\n    boolean: true,\n    short: 'v',\n  },\n  'help': {\n    description: 'Display help information.',\n    boolean: true,\n    short: 'h',\n  },\n}\nconst args = argufy(argsConfig)\n\n/**\n * The location of the test suite directory or file.\n */\nexport const _tests = /** @type {string} */ (args['tests'])\n\n/**\n * Enable import/export transpilation with \u00c0LaMode.\n */\nexport const _alamode = /** @type {boolean} */ (args['alamode'])\n\n/**\n * Require `@babel/register` (needs to be installed).\n */\nexport const _babel = /** @type {boolean} */ (args['babel'])\n\n/**\n * Start the runner in _watch_ mode (rerun on changes).\n */\nexport const _watch = /** @type {boolean} */ (args['watch'])\n\n/**\n * Timeout for tests in ms. Default `2000`.\n */\nexport const _timeout = /** @type {number} */ (args['timeout']) || 2000\n\n/**\n * The location of the snapshot dir. Default `test/snapshot`.\n */\nexport const _snapshot = /** @type {string} */ (args['snapshot']) || 'test/snapshot'\n\n/**\n * The list of folders that will be roots in the snapshot dir. Default `test/spec,test/mask`.\n */\nexport const _snapshotRoot = /** @type {string} */ (args['snapshotRoot']) || 'test/spec,test/mask'\n\n/**\n * Run in interactive mode, allowing to update snapshots\n    and mask results when they don't match currently expected.\n */\nexport const _interactive = /** @type {boolean} */ (args['interactive'])\n\n/**\n * Show the current version.\n */\nexport const _version = /** @type {boolean} */ (args['version'])\n\n/**\n * Display help information.\n */\nexport const _help = /** @type {boolean} */ (args['help'])\n\n/**\n * The additional arguments passed to the program.\n */\nexport const _argv = /** @type {!Array<string>} */ (args._argv)","export default path\nexport const {\n  basename,\n  delimiter,\n  dirname,\n  extname,\n  format,\n  isAbsolute,\n  join,\n  normalize,\n  parse,\n  posix,\n  relative,\n  resolve,\n  sep,\n  win32,\n} = path","export default fs\nexport const {\n  ReadStream,\n  Stats,\n  WriteStream,\n  access,\n  accessSync,\n  appendFile,\n  appendFileSync,\n  chmod,\n  chmodSync,\n  chown,\n  chownSync,\n  close,\n  closeSync,\n  constants,\n  copyFile,\n  copyFileSync,\n  createReadStream,\n  createWriteStream,\n  exists,\n  existsSync,\n  fchmod,\n  fchmodSync,\n  fchown,\n  fchownSync,\n  fdatasync,\n  fdatasyncSync,\n  fstat,\n  fstatSync,\n  fsync,\n  fsyncSync,\n  ftruncate,\n  ftruncateSync,\n  futimes,\n  futimesSync,\n  lchmod,\n  lchmodSync,\n  lchown,\n  lchownSync,\n  link,\n  linkSync,\n  lstat,\n  lstatSync,\n  mkdir,\n  mkdirSync,\n  mkdtemp,\n  mkdtempSync,\n  open,\n  openSync,\n  read,\n  readFile,\n  readFileSync,\n  readSync,\n  readdir,\n  readdirSync,\n  readlink,\n  readlinkSync,\n  realpath,\n  realpathSync,\n  rename,\n  renameSync,\n  rmdir,\n  rmdirSync,\n  stat,\n  statSync,\n  symlink,\n  symlinkSync,\n  truncate,\n  truncateSync,\n  unlink,\n  unlinkSync,\n  unwatchFile,\n  utimes,\n  utimesSync,\n  watch,\n  watchFile,\n  write,\n  writeFile,\n  writeFileSync,\n  writeSync,\n} = fs","export default stream\nexport const {\n  Duplex,\n  PassThrough,\n  Readable,\n  Stream,\n  Transform,\n  Writable,\n} = stream","const getLastItem = (array) => {\n  const item = array[array.length - 1]\n  return item\n}\nconst getItemsFrom = (array, from) => array.slice(from)\n\n/**\n * Get a segment of the stack string, defaults are from = 0 and oneLine = false.\n * @param {string} stack the stack string\n * @param {number} [from=0] index from which to slice from\n * @param {boolean} [oneLine=false] Whether just first line must be returned\n * @returns {string} A stack segment starting from the specified line.\n */\nexport const getStackSegment = (stack, from = 0, oneLine = false) => {\n  if (from === 0 && !oneLine) {\n    return stack\n  }\n  const splitStack = stack\n    .split('\\n', oneLine ? from + 1 : undefined)\n  if (oneLine) {\n    const line = getLastItem(splitStack)\n    return line\n  } else {\n    const items = getItemsFrom(splitStack, from)\n    return items.join('\\n')\n  }\n}\n\n/**\n * Get the stack trace part of when the erotic function was called. Disregards\n * first two lines.\n * @param {string} stack error's stack\n * @param {boolean} [transparent] trim the top line as well\n * @returns {string} A part of stack\n */\nexport const getEntryStack = (stack, transparent = false) => {\n  const stackSegment = getStackSegment(stack, 2 + (transparent ? 1 : 0))\n  return stackSegment\n}\n\n/**\n * Get stack line of where the callback was called.\n * @param {string} stack Stack string.\n * @returns {string} Stack line.\n */\nexport const getCalleeStackLine = (stack) => {\n  const calleeStackLine = getStackSegment(stack, 2, true)\n  return calleeStackLine\n}\n\nexport const getStackHeading = message => `Error: ${message}`\n\n/**\n * Extract caller from the function's `arguments`.\n * @param {Object} args arguments\n * @returns {!Function} The caller function from `arguments.callee.caller`.\n */\nexport const getCallerFromArguments = (args) => {\n  const { callee: { caller } } = args\n  return caller\n}","import cleanStack from '@artdeco/clean-stack'\nimport {\n  getCallerFromArguments, getCalleeStackLine, getStackHeading,\n} from './lib'\n\n/**\n * Create a callback.\n * @param {!Function} entryCaller The function which was called at entry.\n * @param {string} entryStack The first line of the error stack to be returned\n * @param {boolean} [shadow=false] Print only entry stack.\n */\nexport function makeCallback(entryCaller, entryStack, shadow = false) {\n  /**\n   * This callback should be called when an asynchronous error occurred.\n   * @param {(string|Error)} messageOrError A message string or an _Error_ object at the point of actual error.\n   * @returns {Error} An error with the updated stack which includes the callee.\n   */\n  function cb(messageOrError) {\n    const caller = getCallerFromArguments(arguments)\n    const { stack: errorStack } = new Error()\n    const calleeStackLine = getCalleeStackLine(errorStack)\n    const isError = messageOrError instanceof Error\n    const message = isError ? messageOrError.message : messageOrError\n\n    const stackHeading = getStackHeading(message)\n    const entryHasCallee = caller !== null && entryCaller === caller\n    const stackMessage = [\n      stackHeading,\n      ...(entryHasCallee || shadow ? [entryStack] : [\n        calleeStackLine,\n        entryStack,\n      ]),\n    ].join('\\n')\n\n    const stack = cleanStack(stackMessage)\n    const properties = { message, stack }\n    const e = isError ? messageOrError : new Error()\n\n    return /** @type {Error} */ (Object.assign(/** @type {!Object} */ (e), properties))\n  }\n\n  return cb\n}","import {\n  getEntryStack, getCallerFromArguments,\n} from './lib'\nimport { makeCallback } from './callback'\n\n/**\n * Returns a function to create an error with a stack trace starting at the line in code when the call was made by the callee.\n * @param {boolean} [transparent] Pretend as if the call to the function lead to the error, without exposing any of the internal stack.\n */\nexport default function erotic(transparent) {\n  const { stack } = new Error()\n  const caller = getCallerFromArguments(arguments)\n  const entryStack = getEntryStack(stack, transparent)\n\n  return makeCallback(caller, entryStack, transparent)\n}","/**\n * Listens for the `error` event once so that when an error in _streamB_ is emitted, is is also emitted in the _streamA_.\n * @param {stream.Stream} streamA The stream that will emit an error once it's caught in the `streamB`.\n * @param {stream.Stream} streamB The stream from which the error originates.\n * @returns The stream the error is listened on, i.e., transparent to calling the `.once` method on that stream.\n */\nexport const pipeError = (streamA, streamB) => {\n  streamB\n    .once('error', e => {\n      streamA.emit('error', e)\n    })\n  return streamB\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Stream} stream.Stream\n */","import { Writable } from 'stream'\nimport erotic from 'erotic'\nimport cleanStack from '@artdeco/clean-stack'\nimport { pipeError } from './lib'\n\nfunction joinBufferData(array) {\n  return array.join('')\n}\n\n/**\n * A writable stream which collects incoming data into memory, and provides a promise to way for the stream to finish. The promise is resolved with joined chunks.\n */\nexport default class Catchment extends Writable {\n  /**\n   * Create a new catchment to pipe a readable stream into and collect all emitted data.\n   * @param {!_catchment.Options} [options] Options to pass to the `Writable` super constructor, and others shown below.\n   * @param {!stream.Readable} [options.rs] A readable stream to automatically pipe into the catchment. If an error occurs during reading of this stream, the catchment promise will be rejected with it.\n   * @param {boolean} [options.binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n   * @example\n   *\n   * import { createReadStream } from 'fs'\n   * import Catchment from 'catchment'\n   *\n   * const rs = createReadStream('file.txt')\n   * const { promise } = new Catchment({ rs })\n   * const res = await promise\n   */\n  constructor(options) {\n    const {\n      binary = false, rs = null, ...opts\n    } = options || {}\n    /** @suppress {missingProperties} */\n    const { er = erotic(true), proxyError } = options || {}\n    const wrap = (_, e) => er(e)\n    super(/** @type {!stream.WritableOptions} */ (opts))\n    this._caughtData = []\n    this._promise = new Promise((r, j) => {\n      this.on('finish', () => {\n        let d\n        if (binary) {\n          d = Buffer.concat(this._caughtData)\n        } else {\n          d = joinBufferData(this._caughtData)\n        }\n        r(d)\n        this._caughtData = []\n      })\n      this.once('error', (e) => {\n        if (e.stack.indexOf('\\n') == -1) {\n          wrap`${e}`\n          j(e)\n        } else {\n          const stack = cleanStack(e.stack)\n          e.stack = stack\n          if (proxyError) wrap`${e}`\n          j(e)\n        }\n      })\n      if (rs) {\n        pipeError(this, rs).pipe(this)\n      }\n    })\n  }\n  _write(chunk, encoding, callback) {\n    this._caughtData.push(chunk)\n    callback()\n  }\n  /**\n   * A promise which will resolve will all data when the stream finishes.\n   * @type {Promise<string|Buffer>}\n   */\n  get promise() {\n    return this._promise\n  }\n}\n\n/**\n * Collect data into a catchment, and return results when the stream finishes.\n * @param {stream.Readable} readable A readable stream to collect all data from. If an error occurs during reading of this stream, the promise will be rejected with it.\n * @param {_catchment.CollectOptions} options Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n * @param {boolean} [options.binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n * @param {boolean} [options.proxyError=false] Sets whether an error emitted by the stream with have its stack start at the line where the `collect` was called rather than inside of the stream. In other words, hides the implementation of the stream. Default `false`.\n * @example\n *\n * import { collect } from 'catchment'\n * import { createReadStream } from 'fs'\n *\n * const rs = createReadStream(path)\n * await collect(rs, { proxyError: true })\n */\nexport const collect = async (readable, options = {}) => {\n  const { promise } = new Catchment({\n    rs: readable,\n    ...options,\n    er: erotic(true),\n  })\n  const res = await promise\n  return res\n}\n\n/* typal types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_catchment.Options} Options Options to pass to the `Writable` super constructor, and others shown below.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _catchment.Options Options to pass to the `Writable` super constructor, and others shown below.\n * @prop {!stream.Readable} [rs] A readable stream to automatically pipe into the catchment. If an error occurs during reading of this stream, the catchment promise will be rejected with it.\n * @prop {boolean} [binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Readable} stream.Readable\n */\n\n/* typal types/collect.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_catchment.CollectOptions} CollectOptions Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _catchment.CollectOptions Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n * @prop {boolean} [binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n * @prop {boolean} [proxyError=false] Sets whether an error emitted by the stream with have its stack start at the line where the `collect` was called rather than inside of the stream. In other words, hides the implementation of the stream. Default `false`.\n */\n","/**\n * @license diff package https://github.com/kpdecker/jsdiff\n * BSD License\n * Copyright (c) 2009-2015, Kevin Decker <kpdecker@gmail.com>\n */\nexport default class Diff {\n  diff(oldString, newString) {\n    let self = this\n\n    // Allow subclasses to massage the input prior to running\n    oldString = this.castInput(oldString)\n    newString = this.castInput(newString)\n\n    oldString = this.removeEmpty(this.tokenize(oldString))\n    newString = this.removeEmpty(this.tokenize(newString))\n\n    let newLen = newString.length, oldLen = oldString.length\n    let editLength = 1\n    let maxEditLength = newLen + oldLen\n    let bestPath = [{ newPos: -1, components: [] }]\n\n    // Seed editLength = 0, i.e. the content starts with the same values\n    let oldPos = this.extractCommon(bestPath[0], newString, oldString, 0)\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      // Identity per the equality and tokenizer\n      return [{ value: this.join(newString), count: newString.length }]\n    }\n\n    // Main worker method. checks all permutations of a given edit length for acceptance.\n    function execEditLength() {\n      for (let diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        let basePath\n        let addPath = bestPath[diagonalPath - 1],\n          removePath = bestPath[diagonalPath + 1],\n          oldPos = (removePath ? removePath.newPos : 0) - diagonalPath\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined\n        }\n\n        let canAdd = addPath && addPath.newPos + 1 < newLen,\n          canRemove = removePath && 0 <= oldPos && oldPos < oldLen\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined\n          continue\n        }\n\n        // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n        if (!canAdd || (canRemove && addPath.newPos < removePath.newPos)) {\n          basePath = clonePath(removePath)\n          self.pushComponent(basePath.components, undefined, true)\n        } else {\n          basePath = addPath // No need to clone, we've pulled it from the list\n          basePath.newPos++\n          self.pushComponent(basePath.components, true, undefined)\n        }\n\n        oldPos = self.extractCommon(basePath, newString, oldString, diagonalPath)\n\n        // If we have hit the end of both strings, then we are done\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newString, oldString)\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath\n        }\n      }\n\n      editLength++\n    }\n\n    while (editLength <= maxEditLength) {\n      let ret = execEditLength()\n      if (ret) {\n        return ret\n      }\n    }\n  }\n\n  pushComponent(components, added, removed) {\n    let last = components[components.length - 1]\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = { count: last.count + 1, added: added, removed: removed }\n    } else {\n      components.push({ count: 1, added: added, removed: removed })\n    }\n  }\n  extractCommon(basePath, newString, oldString, diagonalPath) {\n    let newLen = newString.length,\n      oldLen = oldString.length,\n      newPos = basePath.newPos,\n      oldPos = newPos - diagonalPath,\n\n      commonCount = 0\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n      newPos++\n      oldPos++\n      commonCount++\n    }\n\n    if (commonCount) {\n      basePath.components.push({ count: commonCount })\n    }\n\n    basePath.newPos = newPos\n    return oldPos\n  }\n\n  equals(left, right) {\n    return left === right\n  }\n  removeEmpty(array) {\n    let ret = []\n    for (let i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i])\n      }\n    }\n    return ret\n  }\n  castInput(value) {\n    return value\n  }\n  tokenize(value) {\n    return value.split('')\n  }\n  join(chars) {\n    return chars.join('')\n  }\n}\n\nfunction buildValues(diff, components, newString, oldString) {\n  let componentPos = 0,\n    componentLen = components.length,\n    newPos = 0,\n    oldPos = 0\n\n  for (; componentPos < componentLen; componentPos++) {\n    let component = components[componentPos]\n    if (!component.removed) {\n      if (!component.added) {\n        let value = newString.slice(newPos, newPos + component.count)\n        value = value.map(function(v, i) {\n          let oldValue = oldString[oldPos + i]\n          return oldValue.length > v.length ? oldValue : v\n        })\n\n        component.value = diff.join(value)\n      } else {\n        component.value = diff.join(newString.slice(newPos, newPos + component.count))\n      }\n      newPos += component.count\n\n      // Common case\n      if (!component.added) {\n        oldPos += component.count\n      }\n    } else {\n      component.value = diff.join(oldString.slice(oldPos, oldPos + component.count))\n      oldPos += component.count\n\n      // Reverse add and remove so removes are output first to match common convention\n      // The diffing algorithm is tied to add then remove output and this is the simplest\n      // route to get the desired output with minimal overhead.\n      if (componentPos && components[componentPos - 1].added) {\n        let tmp = components[componentPos - 1]\n        components[componentPos - 1] = components[componentPos]\n        components[componentPos] = tmp\n      }\n    }\n  }\n\n  // Special case handle for when one terminal is ignored (i.e. whitespace).\n  // For this case we merge the terminal into the prior string and drop the change.\n  // This is only available for string mode.\n  let lastComponent = components[componentLen - 1]\n  if (componentLen > 1\n      && typeof lastComponent.value === 'string'\n      && (lastComponent.added || lastComponent.removed)\n      && diff.equals('', lastComponent.value)) {\n    components[componentLen - 2].value += lastComponent.value\n    components.pop()\n  }\n\n  return components\n}\n\nfunction clonePath(path) {\n  return { newPos: path.newPos, components: path.components.slice(0) }\n}","import Diff from './diff'\n\nconst colors = {\n  'black': 30,\n  'red': 31,\n  'green': 32,\n  'yellow': 33,\n  'blue': 34,\n  'magenta': 35,\n  'cyan': 36,\n  'white': 37,\n  'grey': 90,\n}\n\nconst backgroundColors = {\n  'black': 40,\n  'red': 41,\n  'green': 42,\n  'yellow': 43,\n  'blue': 44,\n  'magenta': 45,\n  'cyan': 46,\n  'white': 47,\n}\n\n/**\n * Color the foreground.\n * @param {string} string The string to color.\n * @param {_erte.Color} color The color to apply.\n */\nexport function c(string, color) {\n  const cc = colors[color]\n  if (!cc) return string\n  return `\\x1b[${cc}m${string}\\x1b[0m`\n}\n\n/**\n * Color the background.\n * @param {string} string The string to color.\n * @param {_erte.Color} color The color to apply.\n */\nexport function b(string, color) {\n  const cc = backgroundColors[color]\n  if (!cc) return string\n  return `\\x1b[${cc}m${string}\\x1b[0m`\n}\n\n/**\n * Compares two strings and outputs a coloured version where strings don't match.\n * @param {string} source A string to compare.\n * @param {string} target Target string to compare with.\n * @returns {string} A string which uses shell-codes to highligh differences.\n */\nexport default function erte(source, target) {\n  const diff = new Diff()\n  const d = diff.diff(source, target)\n  const m = d.map(({ added, removed, value }) => {\n    let p\n    const s = value.split(' ')\n    if (added) {\n      p = s.map(t => {\n        return t.replace(/\\n$/mg, '\u23ce\\n')\n      }).map(t => c(t, 'green')).join(b(' ', 'green'))\n    } else if (removed) {\n      p = s.map(t => {\n        return t.replace(/\\n$/mg, '\u23ce\\n')\n      }).map(t => c(t, 'red')).join(b(' ', 'red'))\n    } else {\n      p = c(value, 'grey')\n    }\n    return p\n  })\n  const s = m.join('')\n  return s\n}\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_erte.Color} Color The color to apply.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {('black'|'red'|'green'|'yellow'|'blue'|'magenta'|'cyan'|'white'|'grey')} _erte.Color The color to apply.\n */\n","import cleanStack from '@artdeco/clean-stack'\nimport { EOL } from 'os'\nimport { c } from 'erte'\n\nexport function indent(str, padding) {\n  return str.replace(/^(?!\\s*$)/mg, padding)\n}\n\nexport function getPadding(level) {\n  return Array\n    .from({ length: level * 2 })\n    .join(' ')\n}\n\n/**\n * Get clean stack for a test, without Node internals\n * @param {Object} test\n * @param {Error} test.error\n * @param {string} test.name\n */\nexport function filterStack({ error, name }) {\n  if (!error)\n    throw new Error('cannot filter stack when a test does not have an error')\n\n  const splitStack = error.stack.split('\\n') // break stack by \\n and not EOL intentionally because Node uses \\n\n  // node 4 will print: at test_suite.test2\n  // node 6 will print: at test2\n  const regex = new RegExp(`at (.+\\\\.)?${name}`)\n  const resIndex = splitStack.findIndex(element => regex.test(element)) + 1\n  const joinedStack = splitStack.slice(0, resIndex).join('\\n')\n  const stack = joinedStack ? joinedStack : cleanStack(error.stack) // use clean stack for async errors\n  return stack.replace(/\\n/g, EOL)\n}\n\nexport function isFunction(fn) {\n  return (typeof fn).toLowerCase() == 'function'\n}\n\nexport const TICK = ' ' + c('\\u2713', 'green') + ' '\nexport const CROSS = ' ' + c('\\u2717', 'red') + ' '\n\nexport const replaceFilename = (filename) => {\n  return filename.replace(/\\.jsx?$/, '')\n}","import { Transform } from 'stream'\nimport { EOL } from 'os'\nimport { getPadding, indent, filterStack } from './'\n\n/**\n * The whole file needs testing when you are especially (depressed)\n * excited.\n */\n\n/**\n * Assigns test suite stack to each data object. Maintains a\n * test suite stack, and if a notification with type\n * 'test-suite-start' is coming, the name of the test suite\n * is pushed onto the stack. When 'test-suite-end' notification\n * comes, the top item is popped from the stack.\n * data[type]\n * data[name]\n * @todo: call back with an error if test-suite-end came with\n * a different test-suite than the one currently on top of the stack.\n * @todo: check for data to be an object to control this error\n */\nexport function createTestSuiteStackStream() {\n  const testSuiteStack = []\n  const ts = new Transform(/** @type {!stream.TransformOptions} */ ({\n    objectMode: true,\n    transform({ type, name, ...props }, encoding, callback) {\n      if (type == 'test-suite-start' && name != 'default') {\n        testSuiteStack.push(name)\n      } else if (type == 'test-suite-end' && name != 'default') {\n        testSuiteStack.pop()\n      }\n      const stack = testSuiteStack.slice()\n      this.push({ type, name, stack, ...props })\n      callback()\n    },\n  }))\n  return ts\n}\n\n/**\n * Prints test suites' name when they begin, and tests' names\n * when they finish. Each test must have a stack property\n * representing its error stack, therefore data must first\n * go through TestSuiteStack stream.\n * data[name]\n * data[type]\n * data[result]\n * data[stack]\n */\nexport function createProgressTransformStream() {\n  const ts = new Transform(/** @type {!stream.TransformOptions} */ ({\n    objectMode: true,\n    transform({ type, name, stack, result }, encoding, callback) {\n      if (type == 'test-suite-start' && name != 'default') {\n        this.push(indent(name, getPadding(stack.length)))\n        this.push(EOL)\n      } else if (type == 'test-end') {\n        this.push(indent(result, getPadding(stack.length)))\n        this.push(EOL)\n      }\n      callback()\n    },\n  }))\n  return ts\n}\n\n/**\n * Prints an error in red and error stack below it.\n * data[error]\n * data[error][stack]\n * data[stack]\n * data[name]\n */\nexport function createErrorTransformStream() {\n  const ts = new Transform(/** @type {!stream.TransformOptions} */ ({\n    objectMode: true,\n    transform({ error, stack, name }, encoding, callback) {\n      if (!error) {\n        return callback()\n      }\n      this.push('\\x1b[31m')\n      this.push(stack.join(' > '))\n      this.push(` > ${name}`)\n      this.push('\\x1b[0m')\n      this.push(EOL)\n      this.push(indent(filterStack({ error, name }), '  '))\n      this.push(EOL)\n      this.push(EOL)\n      callback()\n    },\n  }))\n  return ts\n}\n\n/* This needs to be a `drain`* */\n// function createSuccessTransformStream() {\n//     let successCount = 0\n//     const ts = new Transform({ objectMode: true })\n//     ts._transform = (data, encoding, callback) => {\n//         successCount++\n//         callback()\n//     }\n//     return ts\n// }\n/* * A drain is a structure that will collect and buffer from\n * a stream, and return (e.g., resolved promise) when stream\n * finished.\n */\n","import erotic from 'erotic'\n\nfunction checkArgumentIndex(length, i) {\n  if (i > length - 2) {\n    throw new Error('Function does not accept that many arguments.')\n  }\n}\n\n/**\n * Get a promise from a function which otherwise accepts a callback.\n * @param {Function} fn A function to promisify.\n * @param {*|Array<*>} [args] An array of arguments to use in the call, or a single argument.\n * @param {*} [resolveValue] A value to override the value with which the promise will be resolved.\n * @returns {Promise<*>} A promise resolved on callback invocation without an error and rejected on callback called with an error.\n */\nexport default async function makePromise(fn, args, resolveValue) {\n  const er = erotic(true)\n  if (typeof fn !== 'function') {\n    throw new Error('Function must be passed.')\n  }\n  const { length: fnLength } = fn\n  if (!fnLength) {\n    throw new Error('Function does not accept any arguments.')\n  }\n\n  const res = await new Promise((resolve, reject)=> {\n    const cb = (err, res) => {\n      if (err) {\n        const error = er(err)\n        return reject(error)\n      }\n      return resolve(resolveValue || res)\n    }\n\n    let allArgs = [cb]\n\n    if (Array.isArray(args)) {\n      args.forEach((arg, i) => {\n        checkArgumentIndex(fnLength, i)\n      })\n      allArgs =  [...args, cb]\n    } else if (Array.from(arguments).length > 1) { // args passed as a single argument, not array\n      checkArgumentIndex(fnLength, 0)\n      allArgs = [args, cb]\n    }\n    fn(...allArgs)\n  })\n  return res\n}","function createTimeout(desc, timeout, cb) {\n  return setTimeout(() => {\n    const message = `${desc ? desc : 'Promise'} has timed out after ${timeout}ms`\n    const err = new Error(message)\n    err.stack = `Error: ${err.message}`\n    cb(err)\n  }, timeout)\n}\n\nfunction makeTimeoutPromise(desc, timeout) {\n  let to\n  const promise = new Promise((_, reject) => {\n    to = createTimeout(desc, timeout, reject)\n  })\n  return { timeout: to, promise }\n}\n\n/**\n * Create a promise which will be rejected after a timeout.\n * @param {!Promise} promise A promise to race with\n * @param {number} timeout Timeout in ms after which to reject\n * @param {string} [desc] Description of a promise to be printed in error\n * @returns {!Promise} A promise with a timeout\n */\nexport default async function createPromiseWithTimeout(promise, timeout, desc) {\n  if (!(promise instanceof Promise))\n    throw new Error('Promise expected')\n  if (!timeout)\n    throw new Error('Timeout must be a number')\n  if (timeout < 0)\n    throw new Error('Timeout cannot be negative')\n\n  const { promise: toPromise, timeout: to } = makeTimeoutPromise(desc, timeout)\n  try {\n    return await Promise.race([\n      promise,\n      toPromise,\n    ])\n  } finally {\n    clearTimeout(to)\n  }\n}","/**\n * Evaluate a context or contexts in parallel.\n * @param {!Array<_contextTesting.ContextConstructor>} [contexts] The context constructors (class, function, object).\n */\nexport async function _evaluateContexts(contexts = []) {\n  const c = Array.isArray(contexts) ? contexts : [contexts]\n  const ep = c.map(evaluateContext)\n  const res = await Promise.all(ep)\n  return res\n}\n\n/**\n * @param {*} context The context to evaluate.\n */\nexport const evaluateContext = async (context) => {\n  const fn = isFunction(context)\n  if (!fn) return /** @type {_contextTesting.Context} */ (context)\n\n  try {\n    /** @type {_contextTesting.Context} */\n    const c = {}\n    await context.call(c)\n    return c\n  } catch (err) {\n    if (!/^Class constructor/.test(err.message)) {\n      throw err\n    }\n    // constructor context\n    const c = new /** @type {!_contextTesting.ContextConstructor} */ (context)()\n    if (c._init) {\n      await c._init()\n    }\n\n    /** @type {_contextTesting.Context} */\n    const p = new Proxy(c, {\n      get(target, key) {\n        if (key == 'then') return target\n        if (typeof target[key] == 'function') {\n          return target[key].bind(target)\n        }\n        return target[key]\n      },\n    })\n\n    return p\n  }\n}\n\n/**\n * @param {!Array<_contextTesting.Context>} contexts The contexts to destroy with _destroy method.\n */\nexport const destroyContexts = async (contexts) => {\n  const dc = contexts.map(async (c) => {\n    if (isFunction(c._destroy)) {\n      const res = await c._destroy()\n      return res\n    }\n  })\n  const res = await Promise.all(dc)\n  return res\n}\n\nexport function isFunction(fn) {\n  return (typeof fn).toLowerCase() == 'function'\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@zoroaster/types').Context} _contextTesting.Context\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@zoroaster/types').ContextConstructor} _contextTesting.ContextConstructor\n */","import Catchment from 'catchment'\nimport Stream from 'stream'\nimport promto from 'promto'\nimport { _evaluateContexts, destroyContexts } from './'\n\n/**\n * Asynchronously runs the test within a timeout limit. Evaluates the contexts beforehand and destroys them after.\n * @param {_contextTesting.RunTestOptions} options Options for the `runTest` method.\n * @param {!Array<*>} [options.context] The contexts to evaluate.\n * @param {!Function} options.fn The function to execute.\n * @param {!Array<*>} [options.persistentContext] Evaluated persistent contexts that will come before other contexts.\n * @param {?number} [options.timeout=\"null\"] The timeout to run the test and evaluate/destroy contexts within. Default `null`.\n * @param {function(!stream.Writable)} [options.onCatchment] The callback that will be called with the _Catchment_ stream if the test returned a stream. The stream's data will be collected into the catchment to create the result as a string. The callback can be used to emit errors on the _Catchment_ stream.\n */\nconst runTest = async (options) => {\n  const {\n    context, timeout = null, fn, persistentContext, onCatchment,\n  } = options\n  const started = new Date()\n  /** @type {Error} */\n  let error = null\n  let result = null, destroyResult = null\n\n  /** @type {!Array<!_contextTesting.Context>} */\n  let evaluatedContexts = []\n  let e\n  let eEvaluated\n  try {\n    if (context) {\n      e = context ? _evaluateContexts(context) : Promise.resolve([])\n      e.then(() => {\n        eEvaluated = true\n      })\n      evaluatedContexts = await (timeout ? promto(e, timeout, 'Evaluate context') : e)\n    }\n    const c = persistentContext ? [\n      ...(Array.isArray(persistentContext) ? persistentContext : [persistentContext]),\n      ...evaluatedContexts,\n    ] : evaluatedContexts\n    const r = fn(...c)\n    if (r instanceof Promise) {\n      result = await (timeout ? promto(r, timeout, 'Test') : r)\n    } else {\n      result = r\n    }\n  } catch (err) {\n    error = err\n  }\n\n  if (result instanceof Stream) {\n    try {\n      const catchment = new Catchment({ rs:\n      /** @type {!stream.Readable} */ (result) })\n      if (onCatchment) onCatchment(catchment)\n      result = await catchment.promise\n    } catch (err) {\n      error = err\n    }\n  }\n\n  // even if test failed, destroy context\n  try {\n    const destroy = destroyContexts(evaluatedContexts)\n    destroyResult = await (timeout ? promto(destroy, timeout, 'Destroy') : destroy)\n  } catch (err) {\n    error = err\n  }\n  if (!eEvaluated && e) awaitEvaluations(e)\n\n  const finished = new Date()\n  return {\n    started, finished,\n    error, result, destroyResult,\n  }\n}\n\nconst awaitEvaluations = async (e) => {\n  const ee = await e\n  await destroyContexts(ee)\n}\n\nexport default runTest\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').RunTestOptions} _contextTesting.RunTestOptions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Writable} stream.Writable\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@zoroaster/types').Context} _contextTesting.Context\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@zoroaster/types').ContextConstructor} _contextTesting.ContextConstructor\n */","/**\n * Run all tests in sequence, one by one.\n * This also runs only selected tests, e.g., !test and !test suite\n * @param {!Array<!(_contextTesting.Test|_contextTesting.TestSuite)>} tests An array with tests to reduce.\n * @param {!_contextTesting.ReducerConfig} config The options for the reducer.\n * @param {boolean} [config.onlyFocused=false] Run only focused tests. Default `false`.\n * @param {function(!_contextTesting.Test): !Promise} config.runTest The function that wraps around `@zoroaster/reducer.runTest` method.\n * @param {function(!_contextTesting.TestSuite, boolean): !Promise<!_contextTesting.TestSuite>} config.runTestSuite The function used to run a test suite. The second argument receives whether only focused tests should be run within this test suite.\n */\nconst reducer = async (tests, config) => {\n  const {\n    onlyFocused = false,\n    runTest,\n    runTestSuite,\n  } = config\n  const allCanRun = !onlyFocused\n  const newState = await tests.reduce(async (acc, test) => {\n    const {\n      name, isFocused, fn, hasFocused,\n    } = test\n    const isTest = !!fn\n    if (allCanRun || isFocused || hasFocused) {\n      const accRes = acc instanceof Promise ? await acc : acc // :o\n      // let res\n      if (isTest) {\n        const res = await runTest(test)\n        Object.assign(test, res)\n        accRes[name] = test\n      } else {\n        const res = await runTestSuite(/** @type {!_contextTesting.TestSuite} */ (test), hasFocused)\n        accRes[name] = res\n      }\n      return accRes\n    }\n    return acc\n  }, {})\n\n  return newState\n}\n\nexport default reducer\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@zoroaster/types').Test} _contextTesting.Test\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@zoroaster/types').TestSuite} _contextTesting.TestSuite\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').ReducerConfig} _contextTesting.ReducerConfig\n */","export default assert\nexport const {\n  AssertionError,\n  deepEqual,\n  deepStrictEqual,\n  doesNotThrow,\n  equal,\n  fail,\n  ifError,\n  notDeepEqual,\n  notDeepStrictEqual,\n  notEqual,\n  notStrictEqual,\n  ok,\n  strictEqual,\n  throws,\n} = assert","export default readline\nexport const {\n  Interface,\n  clearLine,\n  clearScreenDown,\n  createInterface,\n  cursorTo,\n  emitKeypressEvents,\n  moveCursor,\n} = readline","import { createInterface } from 'readline'\nimport promto from 'promto'\n\n/**\n * Ask user a question and wait for an answer.\n * @param {string} question Question to present to the user.\n * @param {{ password: (boolean| undefined), timeout: (number|undefined), input: (stream.Readable|NodeJS.ReadStream|undefined), output: (stream.Writable|NodeJS.WriteStream|undefined) }} options The options.\n */\nexport default function ask(question, options = {}) {\n  const {\n    timeout,\n    password = false,\n    output = process.stdout,\n    input = process.stdin,\n    ...rest\n  } = options\n  const rl = createInterface(/** @type {!readline.ReadLineOptions} */ ({\n    input,\n    output,\n    ...rest,\n  }))\n  if (password) {\n    /**\n     * Undocumented API.\n     * @type {!NodeJS.WriteStream}\n     * @suppress {checkTypes}\n     */\n    const o = rl['output']\n    /**\n     * Undocumented API.\n     * @suppress {checkTypes}\n     */\n    rl['_writeToOutput'] = (s) => {\n      if (['\\r\\n', '\\n', '\\r'].includes(s))\n        return o.write(s)\n\n      const v = s.split(question)\n      if (v.length == '2') {\n        o.write(question)\n        o.write('*'.repeat(v[1].length))\n      } else {\n        o.write('*')\n      }\n    }\n  }\n  const p = new Promise(rl.question.bind(rl, question))\n\n  const promise = timeout\n    ? promto(p, timeout, `reloquent: ${question}`)\n    : p\n  /**\n   * @suppress {checkTypes}\n   */\n  rl['promise'] = tryPromise(promise, rl)\n  return rl\n}\n\nconst tryPromise = async (promise, rl) => {\n  try {\n    const res = await promise\n    return res\n  } finally {\n    rl.close()\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Readable} stream.Readable\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Writable} stream.Writable\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('readline').ReadLineOptions} readline.ReadLineOptions\n */","import ask from './ask'\n\n/**\n * Color foreground with grey\n * @param {string} t\n */\nexport function c(t) {\n  return `\\x1b[90m${t}\\x1b[0m`\n}\n\n/**\n * Ask a set of questions.\n * @param {_reloquent.Questions} questions An object with questions as values\n * @param {number} [timeout] How long to wait before answer\n * @returns {!Promise<!Object<string, string>>} A promise where keys from the questions object are validated, assigned default values if required, and populated with answers. Validation function should either throw or return nothing, or throw an error.\n */\nexport default async function askQuestions(questions, timeout) {\n  if (typeof questions != 'object')\n    throw new Error('Please give an object with questions')\n\n  const keys = Object.keys(/** @type {!Object} */ (questions))\n  const res = await keys.reduce(async (acc, key) => {\n    const accRes = await acc\n\n    const value = questions[key]\n    /** @type {!_reloquent.Question} */\n    let question\n    switch (typeof value) {\n    case 'object':\n      question = /** @type {!_reloquent.Question} */ ({ ...value })\n      break\n    case 'string':\n      question = { text: value }\n      break\n    default:\n      throw new Error('A question must be a string or an object.')\n    }\n\n    question.text = `${question.text}${question.text.endsWith('?') ? '' : ':'} `\n\n    let defaultValue\n    let gotDefaultValue\n    if (question.defaultValue) {\n      defaultValue = question.defaultValue\n    }\n    if (question.getDefault) {\n      gotDefaultValue = await question.getDefault()\n    }\n\n    let dv = defaultValue || ''\n    if (defaultValue && gotDefaultValue && defaultValue != gotDefaultValue) {\n      dv = c(defaultValue)\n    } else if (defaultValue && defaultValue == gotDefaultValue) {\n      dv = ''\n    }\n    let gtd = gotDefaultValue || ''\n    const text = `${question.text}${dv ? `[${dv}] ` : ''}${gtd ? `[${gtd}] ` : ''}`\n    const { 'promise': promise } = ask(text, {\n      timeout,\n      password: question.password,\n    })\n\n    const a = await promise\n    let answer = a || gotDefaultValue || question.defaultValue\n\n    if (typeof question.validation == 'function') {\n      question.validation(answer)\n    }\n    if (typeof question.postProcess == 'function') {\n      answer = await question.postProcess(answer)\n    }\n    return {\n      ...accRes,\n      [key]: answer,\n    }\n  }, {})\n\n  return res\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').Questions} _reloquent.Questions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').Question} _reloquent.Question\n */","import askQuestions from './lib/ask-questions'\n\n/**\n * Ask user questions via the CLI. Returns an object with keys as questions' texts and values as answers.\n * @param {_reloquent.Questions} questions A set of questions.\n * @param {number} [timeout] How long to wait before rejecting the promise. Waits forever by default.\n */\nexport default async function reloquent(questions, timeout) {\n  const res = await askQuestions(questions, timeout)\n  return res\n}\n\n/**\n * Ask user a question via the CLI. Returns the answer to the question.\n * @param {string|!_reloquent.Question} question A question to present to the user.\n * @param {number} [timeout] How long to wait before rejecting the promise. Waits forever by default.\n */\nexport async function askSingle(question, timeout) {\n  const { question: answer } = await askQuestions({ question }, timeout)\n  return answer\n}\n\n/**\n * Ask a yes/no question. Returns `true` when answer was `y` and `false` otherwise.\n * @param {string} question The question, such as \"Add default options\", or \"Continue to delete?\".\n * @param {_reloquent.ConfirmOptions} [options] Options for the confirmation question.\n * @param {boolean} [options.defaultYes=true] Whether the default value is _yes_. Default `true`.\n * @param {number} [options.timeout] How long to wait before rejecting the promise. Waits forever by default.\n */\nexport async function confirm(question, options = {}) {\n  const {\n    defaultYes = true,\n    timeout,\n  } = options\n  const hasQ = question.endsWith('?')\n  const text = `${hasQ ? question.replace(/\\?$/, '') : question} (y/n)${hasQ ? '?' : ''}`\n  const { question: answer } = await askQuestions({\n    question: {\n      text,\n      defaultValue: defaultYes ? 'y' : 'n',\n    },\n  }, timeout)\n  return answer == 'y'\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').ConfirmOptions} _reloquent.ConfirmOptions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Question} _reloquent.Question\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Questions} _reloquent.Questions\n */\n","export default util\nexport const {\n  TextDecoder,\n  TextEncoder,\n  callbackify,\n  debug,\n  debuglog,\n  deprecate,\n  error,\n  format,\n  getSystemErrorName,\n  inherits,\n  inspect,\n  isArray,\n  isBoolean,\n  isBuffer,\n  isDate,\n  isError,\n  isFunction,\n  isNull,\n  isNullOrUndefined,\n  isNumber,\n  isObject,\n  isPrimitive,\n  isRegExp,\n  isString,\n  isSymbol,\n  isUndefined,\n  log,\n  print,\n  promisify,\n  puts,\n} = util","import { c } from 'erte'\n\nconst log = (t, ...args) => {\n  let j = -1\n  const s = t.replace(/%s/g, () => {\n    j++\n    return args[j]\n  })\n  return s\n}\n\n/**\n * Compare JS Objects With Color Difference.\n */\nexport default function differently(objectA, objectB) {\n  let level = 0\n\n  const write = (was, became = undefined) => {\n    const i = ' '.repeat(level * 2)\n    const b = became !== undefined ? c('+ ' + toString(became), 'green') : null\n    const w = was !== undefined ? c('- ' + toString(was), 'red') : null\n    const t = []\n    if (w) t.push(log('%s%s', i, w))\n    if (b) t.push(log('%s%s', i, b))\n    return t.join('\\n')\n  }\n  const writeCommon = (propName) => {\n    const i = ' '.repeat(level * 2)\n    return log('%s%s', i, propName)\n  }\n  const compare = (a, b) => {\n    if (a instanceof Date && b instanceof Date) {\n      if (!compareDates(a, b)) {\n        return write(a, b)\n      }\n      return ''\n    } else if (\n      (a instanceof Date && !(b instanceof Date)) ||\n      (!(a instanceof Date) && b instanceof Date) ||\n      (Array.isArray(a) && !Array.isArray(b)) ||\n      (!Array.isArray(a) && Array.isArray(b))\n    ) {\n      return write(a, b)\n    } else if (\n      (isPrimitive(a) && isPrimitive(b)) ||\n      (!isPrimitive(a) && isPrimitive(b)) ||\n      (isPrimitive(a) && !isPrimitive(b))\n    ) {\n      if (a != b) return write(a, b)\n      return ''\n    } else if (a.constructor && !b.constructor) {\n      return write(a.constructor.name, b)\n    } else if (!a.constructor && b.constructor) {\n      return write(a, b.constructor.name)\n    } else if (a.constructor && b.constructor) {\n      if (a.constructor.name != b.constructor.name) {\n        return write(a.constructor.name, b.constructor.name)\n      }\n      const valA = a.valueOf()\n      const valB = b.valueOf()\n      if (isPrimitive(valA) && isPrimitive(valB) && valA != valB) {\n        return write(valA, valB)\n      }\n    }\n    if (Array.isArray(a) && Array.isArray(b)) {\n      let j\n      const updated = a.map((valA, i) => {\n        j = i\n        const valB = b[i]\n        let ca = compare(valA, valB)\n        if (ca) ca = `${writeCommon(`[${i}]`)}\\n${ca}`\n        return ca\n      }).filter(Boolean)\n      const rest = b.slice(j + 1).map((valB, i) => {\n        return `${writeCommon(`[${j + i + 1}]`)}\\n${write(undefined, valB)}`\n      })\n      return [...updated, ...rest].join('\\n')\n    }\n    if (typeof a == 'object' && typeof b == 'object') {\n      const added = []\n      const removed = []\n      const common = []\n      Object.keys(a).forEach((k) => {\n        if (!(k in b)) removed.push(k)\n        else common.push(k)\n      })\n      Object.keys(b).forEach((k) => {\n        if (!(k in a)) added.push(k)\n      })\n      const R = removed.map(r => {\n        let s = toString(a[r])\n        // if (/^\\s+$/.test(s)) s = `\"${s}\"`\n        s = `: ${s}`\n        return write(`${r}${s}`)\n      })\n      const A = added.map(ad => write(undefined, `${ad}: ${toString(b[ad])}`))\n\n      const updated = common.map((k) => {\n        level++\n        const written = compare(a[k], b[k])\n        let u = ''\n        if (written) {\n          u += writeCommon(Array.isArray(a[k]) && Array.isArray(b[k]) ? `${k}.Array` : k)\n          u += '\\n' + written\n        }\n        level--\n        return u\n      }).filter(Boolean)\n\n      const RA = [...R, ...A, ...updated].join('\\n')\n\n      return RA\n    }\n    console.error('Could not compare two values: %s %s. Please file a bug with differently.', a, b)\n  }\n\n  const s = compare(objectA, objectB)\n\n  return s\n}\n\nconst isPrimitive = a => {\n  if (a === null) return true\n  return ['string', 'number', 'boolean',\n    'symbol', 'null', 'undefined'].includes(typeof a)\n}\n\nconst toString = (p) => {\n  if (Array.isArray(p)) return `Array[${p.toString()}]`\n  const hasToString = p && p.toString\n  const s = hasToString ? p.toString() : `${p}`\n  // if (p && p.constructor && p.constructor.name)\n    // return `${p.constructor.name}.${s}`\n  return s\n}\n\n/**\n * @param {!Date} a\n * @param {!Date} b\n */\nconst compareDates = (a, b) => {\n  if (a.getTime() != b.getTime()) return false\n}","import { createReadStream } from 'fs'\nimport { collect } from 'catchment'\n\n/**\n * Read a file.\n * @param {string} path The path to the file to read.\n */\nexport default async function read(path) {\n  const rs = createReadStream(path)\n  /** @type {string} */\n  const res = await collect(rs)\n  return res\n}\n\n/**\n * Read a file as a buffer.\n * @param {string} path The path to the file to read.\n */\nexport async function readBuffer(path) {\n  const rs = createReadStream(path)\n  /** @type {Buffer} */\n  const res = await collect(rs, { binary: true })\n  return res\n}","import { createWriteStream } from 'fs'\nimport erotic from 'erotic'\n\n/**\n * Write a file to the filesystem.\n * @param {string} path The path of the file to write.\n * @param {string|Buffer} data The data to write.\n */\nexport default async function write(path, data) {\n  if (!path) throw new Error('No path is given.')\n  const er = erotic(true)\n  const ws = createWriteStream(path)\n  await new Promise((r, j) => {\n    ws\n      .on('error', (e) => {\n        const err = er(e)\n        j(err)\n      })\n      .on('close', r)\n      .end(data)\n  })\n}","import { mkdir } from 'fs'\nimport makePromise from 'makepromise'\nimport { dirname } from 'path'\n\n/**\n * Makes sure that a file can be created by creating all directories to which it belongs, e.g., `ensurePath('~/path/to/wrote.data')` will attempt to create `~/path/to` directory recursively.\n * @param {string} path Path to the file\n * @throws {Error} When the first folder in the path is non-executable\n */\nexport default async function ensurePath(path) {\n  const dir = dirname(path)\n  try {\n    await make(dir)\n    return path\n  } catch (err) {\n    if (/EEXIST/.test(err.message) && err.message.indexOf(dir) != -1) {\n      return path\n    }\n    throw err\n  }\n}\n\n/**\n * Recursive promise-based mkdir.\n * @param {string} dir Path to the directory to be created\n */\nasync function make(dir) {\n  try {\n    await makePromise(mkdir, dir)\n  } catch (err) {\n    if (err.code == 'ENOENT') {\n      const parentDir = dirname(dir)\n      await make(parentDir)\n      await make(dir)\n    } else if (err.code != 'EEXIST') { // created in parallel\n      throw err\n    }\n  }\n}\n","/**\n * Pad Strings.\n * @param {number} width The width to which to pad.\n * @param {string} string The string to pad.\n */\nconst pad = (width, string) => {\n  const d = Math.max(width - string.length, 0)\n  const p = ' '.repeat(d)\n  const s = `${string}${p}`\n  return s\n}\n\n/**\n * Pads the string so that each line is of equal width.\n * @param {string} string The string to pad.\n * @param {!_paddys.Config} [options] Options for the program.\n * @param {number} [options.width] The width to which to pad lines.\n * @example\n```\nconst res = paddys(`test\nt`)\n// test\n// t___\n```\n */\nconst paddys = (string, options = {}) => {\n  const {\n    width,\n  } = options\n  const s = string.split('\\n')\n  const w = width || s.reduce((acc, { length: l }) => l > acc ? l : acc, 0)\n  return s.map(pad.bind(null, w)).join('\\n')\n}\n\nexport default paddys\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_paddys.Config} Config Options for the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _paddys.Config Options for the program.\n * @prop {number} [width] The width to which to pad lines.\n */\n","import paddys from 'paddys'\n/**\n * Add a frame around strings.\n * @param {string} string The string to frame.\n * @param {!_frameOfMind.Config} [options] Options for the program.\n * @param {number} [options.padding=1] The left and right padding. Default `1`.\n */\nexport default function frameOfMind(string, options = {}) {\n  const { padding = 1 } = options\n  const l = string.split('\\n')\n  const w = l.reduce((acc, { length }) => length > acc ? length : acc, 0)\n  const ww = w + padding * 2\n  const bt = `\u250c${'\u2500'.repeat(ww)}\u2510`\n  const bb = `\u2514${'\u2500'.repeat(ww)}\u2518`\n  const pp = ' '.repeat(padding)\n  const p = paddys(string)\n    .split('\\n')\n    .map(line => `\u2502${pp}${line}${pp}\u2502`)\n    .join('\\n')\n  return `${bt}\\n${p}\\n${bb}`\n}\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_frameOfMind.Config} Config Options for the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _frameOfMind.Config Options for the program.\n * @prop {number} [padding=1] The left and right padding. Default `1`.\n */\n","import { resolve } from 'path'\nimport erte from 'erte'\nimport { equal } from 'assert'\nimport { confirm } from 'reloquent'\nimport { inspect } from 'util'\nimport deepEqual from '@zoroaster/deep-equal'\nimport read from '@wrote/read'\nimport write from '@wrote/write'\nimport ensurePath from '@wrote/ensure-path'\nimport erotic from 'erotic'\nimport frame from 'frame-of-mind'\n\nconst isJSON = p => /\\.json$/.test(p)\n\n/**\n * SnapshotContext allows to match the test result against a snapshot. The default snapshot location is `test/snapshot`.\n */\nexport default class SnapshotContext {\n  constructor() {\n    this.snapshotsDir = 'test/snapshot'\n  }\n  /**\n   * Set the directory to save snapshots in.\n   * @param {string} dir The directory.\n   */\n  setDir(dir) {\n    this.snapshotsDir = dir\n  }\n  async save(path, snapshot) {\n    const p = resolve(this.snapshotsDir, path)\n    await ensurePath(p)\n    if (isJSON(p)) {\n      const data = JSON.stringify(snapshot, null, 2)\n      await write(p, data)\n    } else {\n      await write(p, snapshot)\n    }\n  }\n  async prompt(snapshot, name) {\n    if (typeof snapshot == 'string') {\n      let maxWidth = snapshot.split('\\n').reduce((acc, current) => {\n        if (current.length > acc) return current.length\n      }, 0)\n      if (process.stdout.isTTY && process.stdout.columns - 4 >= maxWidth) {\n        console.log(frame(snapshot)) // eslint-disable-line no-console\n      } else {\n        console.log(snapshot) // eslint-disable-line no-console\n      }\n    } else {\n      console.log(inspect(snapshot, { colors: true })) // eslint-disable-line\n    }\n    const answer = await confirm(`Save snapshot${name ? ` for ${name}` : ''}?`)\n    return answer\n  }\n  async promptAndSave(path, actual, name) {\n    if (!actual) throw new Error('Give snapshot to save')\n    const res = await this.prompt(actual, name)\n    if (res) {\n      await this.save(path, actual)\n    } else {\n      throw new Error('Could not test missing snapshot')\n    }\n  }\n  async read(path) {\n    const p = resolve(this.snapshotsDir, path)\n    if (isJSON(p)) {\n      const data = await read(p)\n      const snapshot = JSON.parse(data)\n      return snapshot\n    } else {\n      const snapshot = await read(p)\n      return snapshot\n    }\n  }\n  /**\n   * Test the snapshot by reading the file and matching it against the given actual value. If filename ends with `.json`, the data will be serialised as a JSON, and then parsed back and deep-equal will be performed. Otherwise, string comparison is made with red/green highlighting. If no file exists, a prompt will be shown to save a snapshot. Answer with **y** to accept the snapshot and pass the test. There's no update possibility which means files must be deleted by hand and new snapshots taken.\n   * @param {string} path Path to the file\n   * @param {string} actual Expected result\n   * @param {string} name The name of the test.\n   * @param {boolean} [interactive] Whether to ask to update the test in interactive mode.\n   */\n  async test(path, actual, name, interactive = false) {\n    if (!actual) throw new Error('Pass the actual value for snapshot.')\n    const cb = erotic(true)\n    const json = isJSON(path)\n    let expected\n    try {\n      expected = await this.read(path)\n      if (json) {\n        deepEqual(actual, expected)\n      } else {\n        equal(actual, expected)\n      }\n    } catch (err) {\n      if (err.code == 'ENOENT') {\n        await this.promptAndSave(path, actual, name)\n        return\n      }\n      let erteString\n      if (!json) {\n        erteString = erte(expected, actual)\n      }\n      if (interactive) {\n        if (json) console.log(err.message)\n        else console.log(erteString)\n        const upd = await confirm(`Update snapshot${name ? ` for ${name}` : ''}?`)\n        if (upd) {\n          await this.save(path, actual)\n          return\n        }\n      }\n      if (!json) {\n        !interactive && console.log(erteString) // eslint-disable-line no-console\n        const e = cb('The string didn\\'t match the snapshot.')\n        e.erte = erteString\n        throw e\n      }\n      const e = cb(err)\n      throw e\n    }\n  }\n}\n","import { deepStrictEqual } from 'assert'\nimport differently from 'differently'\n\n/**\n * The Deep Equal Assertion With Color.\n * @param {?} actual\n * @param {?} expected\n * @param {string} [message]\n */\nexport default function deepEqual(actual, expected, message) {\n  try {\n    deepStrictEqual(actual, expected, message)\n  } catch (err) {\n    const s = differently(expected, actual)\n    err.message = [err.message, s].filter(Boolean).join('\\n')\n    throw err\n  }\n}\n\n","import makePromise from 'makepromise'\nimport { lstat } from 'fs'\n\n/**\n * Check If The File Or Directory Exists, And Return Stats.\n * @param {string} path The path to check for existence.\n */\nconst exists = async (path) => {\n  try {\n    const ls = /** @type {fs.Stats} */ (await makePromise(lstat, path))\n    return ls\n  } catch (err) {\n    return null\n  }\n}\n\nexport default exists\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('fs').Stats} fs.Stats\n */","import { lstat, readdir } from 'fs'\nimport makePromise from 'makepromise'\nimport { join } from 'path'\n\n/**\n * Update information about directory's content with lstat.\n * @param {string} dirPath Path to the root directory\n * @param {!Array<string>} dirContent\n * @returns {Promise<Array<_readDirStructure.File>>} An array with file objects.\n */\nasync function lstatFiles(dirPath, dirContent) {\n  const readFiles = dirContent.map(async (relativePath) => {\n    const path = join(dirPath, relativePath)\n    const ls = await makePromise(lstat, path)\n    return {\n      lstat: ls,\n      path,\n      relativePath,\n    }\n  })\n  const res = await Promise.all(readFiles)\n  return res\n}\n\n/**\n * Check if lstat result is a directory\n * @param {_readDirStructure.File} lstatRes\n * @param {!fs.Stats} lstatRes.lstat The stats of the item.\n * @param {string} lstatRes.path The full path of the item.\n * @param {string} lstatRes.relativePath The name of the item.\n * @returns {boolean} true if is a directory\n */\nconst isDirectory = lstatRes => lstatRes.lstat.isDirectory()\n/**\n * Check if lstat result is not a directory\n * @param {_readDirStructure.File} lstatRes\n * @param {!fs.Stats} lstatRes.lstat The stats of the item.\n * @param {string} lstatRes.path The full path of the item.\n * @param {string} lstatRes.relativePath The name of the item.\n * @returns {boolean} true if is not a directory\n */\nconst isNotDirectory = lstatRes => !lstatRes.lstat.isDirectory()\n\nconst getType = (lstatRes) => {\n  if (lstatRes.lstat.isDirectory()) {\n    return 'Directory'\n  }\n  if (lstatRes.lstat.isFile()) {\n    return 'File'\n  }\n  if (lstatRes.lstat.isSymbolicLink()) {\n    return 'SymbolicLink'\n  }\n}\n\n/**\n * Read a directory, and return its structure as an object. Only `Files`, `Directories` and `Symlinks` are included!\n * @param {string} dirPath Path to the directory.\n * @returns {Promise<_readDirStructure.DirectoryStructure>} An object reflecting the directory structure.\n * @example\n```js\nconst res = await readDirStructure('dir')\n// result:\n{\n  type: 'Directory',\n  content: {\n    'data.txt': {\n      type: 'File'\n    },\n    subdir: {\n      type: 'Directory',\n      content: {\n        'data-ln.txt': {\n          type: 'SymbolicLink'\n        },\n      }\n    }\n  }\n}\n```\n */\nexport default async function readDirStructure(dirPath) {\n  if (!dirPath) {\n    throw new Error('Please specify a path to the directory')\n  }\n  const ls = await makePromise(lstat, dirPath)\n  if (!ls.isDirectory()) {\n    const err = new Error('Path is not a directory')\n    err.code = 'ENOTDIR'\n    throw err\n  }\n  const dir = /** @type {!Array<string>} */ (await makePromise(readdir, dirPath))\n  const lsr = await lstatFiles(dirPath, dir)\n\n  const directories = lsr.filter(isDirectory) // reduce at once\n  const notDirectories = lsr.filter(isNotDirectory)\n\n  const files = notDirectories.reduce((acc, current) => {\n    const type = getType(current)\n    return {\n      ...acc,\n      [current.relativePath]: {\n        type,\n      },\n    }\n  }, {})\n\n  const dirs = await directories.reduce(async (acc, { path, relativePath }) => {\n    const res = await acc\n    const structure = await readDirStructure(path)\n    return {\n      ...res,\n      [relativePath]: structure,\n    }\n  }, {})\n\n  const content = {\n    ...files,\n    ...dirs,\n  }\n  return {\n    content,\n    type: 'Directory',\n  }\n}\n\n/**\n * After running the `readDirStructure`, this function can be used to flatten the `content` output and return the list of all files (not including symlinks).\n * @param {!_readDirStructure.Content} content The recursive content of the directory.\n * @param {string} path The path to the directory.\n */\nexport const getFiles = (content, path) => {\n  let files = []\n  let dirs = []\n  Object.keys(content).forEach((key) => {\n    const { type } = content[key]\n    if (type == 'File') files.push(join(path, key))\n    else if (type == 'Directory') dirs.push(key)\n  })\n  const dirFiles = dirs.reduce((acc, dir) => {\n    const { content: c } =\n      /** @type {!_readDirStructure.Content} */ (content[dir])\n    const f = getFiles(c, join(path, dir))\n    return [...acc, ...f]\n  }, [])\n  return [...files, ...dirFiles]\n}\n\n/* typal types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_readDirStructure.File} File\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _readDirStructure.File\n * @prop {!fs.Stats} lstat The stats of the item.\n * @prop {string} path The full path of the item.\n * @prop {string} relativePath The name of the item.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_readDirStructure.Content} Content The recursive content of the directory.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object<string, !_readDirStructure.DirectoryStructure>} _readDirStructure.Content The recursive content of the directory.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_readDirStructure.DirectoryStructure} DirectoryStructure A directory structure representation.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _readDirStructure.DirectoryStructure A directory structure representation.\n * @prop {string} [type] The type of the item.\n * @prop {!_readDirStructure.Content} [content] The recursive content if the item is a directory.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('fs').Stats} fs.Stats\n */\n","import { unlink, rmdir, lstat } from 'fs'\nimport readDirStructure from '@wrote/read-dir-structure'\nimport makePromise from 'makepromise'\nimport { join } from 'path'\n\nconst removeFile = async (path) => {\n  await makePromise(unlink, path)\n}\n\n/**\n * Removes files and directories.\n * @param {string} path Path to remove.\n */\nconst removeDir = async (path) => {\n  const { content } = await readDirStructure(path)\n  const files = Object.keys(/** @type {!Object} */ (content))\n    .filter((k) => {\n      const { type } = content[k]\n      if (type == 'File' || type == 'SymbolicLink') return true\n    })\n  const dirs = Object.keys(/** @type {!Object} */ (content))\n    .filter((k) => {\n      const { type } = content[k]\n      if (type == 'Directory') return true\n    })\n  const filesFullPaths = files.map(file => join(path, file))\n  await Promise.all(\n    filesFullPaths.map(removeFile)\n  )\n  const dirsFullPaths = dirs.map(dir => join(path, dir))\n  await Promise.all(\n    dirsFullPaths.map(removeDir)\n  )\n  await makePromise(rmdir, path)\n}\n\n/**\n * Removes a path from the filesystem.\n * @param {string} path Path to the file or directory to remove.\n */\nconst rm = async (path) => {\n  const s = /** @type {!fs.Stats} */ (\n    await makePromise(lstat, path)\n  )\n  if (s.isDirectory()) {\n    await removeDir(path)\n  } else {\n    await removeFile(path)\n  }\n}\n\nexport default rm\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('fs').Stats} fs.Stats\n */\n\n/* documentary types/index.xml */\n","import { join } from 'path'\nimport SnapshotContext from 'snapshot-context'\nimport exists from '@wrote/exists'\nimport rm from '@wrote/rm'\nimport { c } from 'erte'\nimport { confirm } from 'reloquent'\nimport { inspect } from 'util'\n\nconst removeFocus = n => n.replace(/^!/, '')\n\nconst handleSnapshot = async (result, name, path, snapshotDir = '', snapshotRoot = [], interactive = false, extension = 'txt') => {\n  const nn = removeFocus(name)\n  const n = nn.replace(/ /g, '-')\n  const isString = typeof result == 'string'\n  const ext = isString ? extension : 'json'\n  const snapshotFilename = `${n}.${ext}`\n  let pp = join(...path.map(removeFocus))\n  const root = snapshotRoot.find(r => {\n    const rr = join(...r.split('/'))\n    return pp.startsWith(rr)\n  })\n  if (root) pp = pp.slice(root.length)\n  const p = join(snapshotDir, pp)\n  let snapshotPath = join(p, snapshotFilename)\n\n  if (result) {\n    const sc = new SnapshotContext()\n    sc.setDir(p)\n    const otherSnapshot = `${n}.${isString ? 'json' : extension}`\n    const op = join(p, otherSnapshot)\n    const e = await exists(op)\n    if (e) {\n      const m = `Snapshot of another type exists: ${c(op, 'red')}`\n      if (!interactive) {\n        throwError(m)\n      }\n      console.log('%s.\\nNew data:', m)\n      console.log(isString ? result : inspect(result, { colors: true }))\n      const upd = await confirm(`Update snapshot ${c(op, 'yellow')} to a new type?`)\n      if (!upd)\n        throwError(m)\n      await sc.save(snapshotFilename, result)\n      await rm(op)\n      return\n    }\n\n    try {\n      await sc.test(snapshotFilename, result, c(nn, 'yellow'), interactive)\n    } catch (err) {\n      if (err.message == 'The string didn\\'t match the snapshot.') {\n        err.message = `The string didn't match the snapshot ${c(snapshotPath, 'yellow')}`\n      }\n      throwError(err)\n    }\n  } else {\n    let e = await exists(snapshotPath)\n    if (!e) {\n      snapshotPath = snapshotPath.replace(/json$/, extension)\n      e = await exists(snapshotPath)\n    }\n    if (e) {\n      throwError(`Snapshot ${snapshotPath} exists, but the test did not return anything.`)\n    }\n  }\n}\n\nconst throwError = (message) => {\n  const err = new Error(message)\n  err.stack = err.message\n  throw err\n}\n\nexport default handleSnapshot","import { EOL } from 'os'\nimport reducer, { runTest, evaluateContext, destroyContexts } from '@zoroaster/reducer'\nimport promto from 'promto'\nimport { c as color } from 'erte'\nimport { TICK, CROSS, indent, filterStack, replaceFilename } from './'\nimport handleSnapshot from './snapshot'\nimport Test from './Test' // eslint-disable-line\nimport TestSuite from './TestSuite' // eslint-disable-line\n\nconst Zoroaster = require(/* ok static analysis */ '../')\n\n/**\n * Run the test.\n * @param {!Function|undefined} notify - notify function\n * @param {!Array<string>} path Abstract path to the test consisting of parent test-suites' names.\n * @param {!Test} test The test to run.\n * @param {!Object} [options]\n * @param {Error} [error] A test suite error that each test will fail with.\n */\nasync function runTestAndNotify(notify, path, { name, context, fn, timeout, persistentContext }, options = {}, error = null) {\n  if (notify) notify({\n    name,\n    type: 'test-start',\n  })\n  let ext, snapshotSource, serialise\n  const tc = Array.isArray(context) ? context : [context]\n  tc.forEach((c) => {\n    if (c.prototype instanceof Zoroaster) {\n      ext = c['snapshotExtension']\n      serialise = c['serialise']\n    }\n  })\n  // only tests in masks won't have a name\n  const ttc = fn.name ? tc.slice(0, fn.length) : tc\n  const testContext = ttc.map((c) => {\n    try {\n      if (c === Zoroaster || c.prototype instanceof Zoroaster)\n        return {\n          'snapshotExtension'(e) { ext = e },\n          'snapshotSource'(t, e) { snapshotSource = t; if (e) ext = e },\n        }\n      return c\n    } catch (err) {\n      return c\n    }\n  })\n  let catchment\n  let res; const h = (err) => {\n    if (catchment) return catchment.emit('error', err)\n    error = err\n  }\n  if (!error) {\n    process.once('uncaughtException', h)\n    process.once('unhandledRejection', h)\n    try {\n      res = await runTest({\n        context: testContext,\n        persistentContext,\n        fn,\n        timeout,\n        onCatchment(c) {\n          catchment = c\n        },\n      })\n      let { result, error: testError } = res\n      // if wasn't an unhandled one\n      if (!error) error = testError\n      if (!error) {\n        try {\n          if (result !== undefined && serialise) result = serialise(result)\n          await handleSnapshot(result,\n            snapshotSource || name,\n            path, options.snapshot, options.snapshotRoot, options.interactive, ext)\n        } catch (err) {\n          error = err\n        }\n      }\n      // used in masks to update the result file\n      if (options.interactive && testError && testError['handleUpdate']) {\n        try {\n          const updated = await testError['handleUpdate']()\n          if (updated) error = null\n        } catch (err) {\n          // in case there's an error in the handle logic\n          error = err\n        }\n      }\n    } finally {\n      process.removeListener('uncaughtException', h)\n      process.removeListener('unhandledRejection', h)\n    }\n  }\n\n  if (notify) notify({\n    name,\n    error,\n    type: 'test-end',\n    result: dumpResult({ error, name }),\n  })\n  return res\n}\n\nfunction dumpResult({ error, name }) {\n  if (error === null) {\n    return `${TICK} ${name}`\n  } else {\n    return `${CROSS} ${name}` + EOL\n      + indent(filterStack({ error, name }), ' | ')\n  }\n}\n\n/**\n * Run test suite (wrapper for notify).\n * @param {!Function|undefined} notify The function to call for notifications.\n * @param {!Array<string>} path The path to the test suite.\n * @param {!_contextTesting.TestSuite} testSuite The test suite\n * @param {boolean} [onlyFocused] Only run focussed tests.\n * @param {*} [options]\n * @param {Error} [error]\n */\nexport async function runTestSuiteAndNotify(\n  notify, path, { name, tests, persistentContext }, onlyFocused, options, error,\n) {\n  // const n = getNames(persistentContext)\n  // console.log('will run a test suite %s', n)\n  if (notify) notify({ type: 'test-suite-start', name })\n  let pc, res\n  if (persistentContext && !error) {\n    // console.log('will evaluate %s', n)\n    try {\n      pc = await evaluatePersistentContext(persistentContext)\n      bindContexts(tests, pc)\n    } catch (err) {\n      // maybe make test-suite-error notify event rather than failing each test\n      err.message = `Persistent context failed to evaluate: ${err.message}`\n      /** @type {!Array<string>} */\n      const s = err.stack.split('\\n', 2)\n      err.stack = s.join('\\n')\n      // const i = s.findIndex(st => {\n      //   return / at evaluateContext.+?reducer/.test(st)\n      // })\n      // if (i != -1) { // wat\n      //   err.stack = s.slice(0, i).join('\\n')\n      // }\n      error = err\n    }\n  }\n  try {\n    const newPath = [...path, replaceFilename(name)]\n    res = await runInSequence(notify, newPath, tests, onlyFocused, options, error)\n    if (notify) notify({ type: 'test-suite-end', name })\n  } finally {\n    if (pc) {\n      // console.log('will destroy %s', n)\n      try {\n        await destroyPersistentContext(pc)\n      } catch (err) {\n        /** @type {!Array<string>} */\n        const s = err.stack.split('\\n', 2)\n        err.stack = s.join('\\n')\n        // const i = s.findIndex(st => {\n        //   return / at contexts\\.map.+?reducer/.test(st)\n        // })\n        // if (i != -1) { // wat\n        //   err.stack = s.slice(0, i).join('\\n')\n        // }\n        console.log(color(err.stack, 'red'))\n      }\n    }\n  }\n  return res\n}\n\n/**\n * @param {!Array<!Test>} tests\n */\nconst bindContexts = (tests, pc) => {\n  tests.forEach((t) => {\n    t.persistentContext = pc\n  })\n}\n\nconst evalContext = async (context, timeout) => {\n  const p = evaluateContext(context)\n  const _timeout = context._timeout || timeout\n  const res = await promto(p, _timeout, `Evaluate persistent context ${\n    context.name ? context.name : ''}`)\n  return res\n}\n\nconst evaluatePersistentContext = async (context, timeout = 5000) => {\n  const c = Array.isArray(context) ? context : [context]\n  const res = await Promise.all(c.map(cc => evalContext(cc, timeout)))\n  return res\n  // await p <- time-leak\n}\n\nconst destroyContext = async (context, timeout) => {\n  const p = destroyContexts([context])\n  const _timeout = context._timeout || timeout\n  const res = await promto(p, _timeout, `Destroy persistent context ${\n    context.name ? context.name : ''}`)\n  return res\n}\n\nconst destroyPersistentContext = async (contexts, timeout = 5000) => {\n  const res = await Promise.all(contexts.map(cc => destroyContext(cc, timeout)))\n  return res\n  // await p <- time-leak (what?)\n}\n\n// const getNames = persistentContext => {\n//   if (!persistentContext) return ''\n//   const p = Array.isArray(persistentContext) ? persistentContext : [persistentContext]\n//   return p.map(({ name }) => name).join(', ')\n// }\n\n/**\n * Run all tests in sequence, one by one. The entry point to the runner.\n * @param {!Function|undefined} notify A notify function to be passed to run method.\n * @param {!Array<string>} path The path to the test suite in form of names of parent test suites and the current one.\n * @param {!Array<!(Test|TestSuite)>} tests An array with tests to run.\n * @param {boolean} [onlyFocused=false] Run only focused tests.\n * @param {{ snapshotRoot: !Array<string>, snapshot: string, interactive: boolean }} [options] Options from the runner.\n * @param {!Error} [error]\n */\nexport async function runInSequence(notify, path, tests, onlyFocused, options, error) {\n  const res = await reducer(tests, {\n    onlyFocused,\n    runTest(test) {\n      return runTestAndNotify(notify, path, test, options, error)\n    },\n    runTestSuite(testSuite, hasFocused) {\n      return runTestSuiteAndNotify(notify, path, testSuite, onlyFocused ? hasFocused : false, options, error)\n    },\n  })\n  return res\n}\n\nexport default runTestAndNotify","import { c } from 'erte'\nimport runTestAndNotify from './run-test'\n\n/**\n * @implements {_contextTesting.Test}\n */\nexport default class Test {\n  /**\n   * Create a new test object.\n   * @param {string} name The name of the test.\n   * @param {!Function} fn The function as specified in the specs.\n   * @param {number} [timeout=2000] The timeout in ms after which to throw the timeout error.\n   * @param {!Array<*>} [context] The contexts as objects, functions or constructors.\n   */\n  constructor(name, fn, timeout = 2000, context = []) {\n    this.timeout = timeout\n    this.name = name\n    this.fn = fn\n    this.context = context\n    /** A persistent context evaluated by the test suite. */\n    this.persistentContext = null\n    this.error = null\n  }\n  get isFocused() {\n    return this.name.startsWith('!')\n  }\n  // /** @deprecated */\n  // async run(notify) {\n  //   console.warn(c('Deprecated method Test.run', 'yellow'))\n  //   const res = await runTestAndNotify(notify, [], '', [], { name: this.name, fn: this.fn, context: this.context, timeout: this.timeout })\n  //   Object.assign(this, res)\n  //   return res\n  // }\n}\n\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@zoroaster/types').ContextConstructor} ContextConstructor\n */\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@zoroaster/types').Context} Context\n */","import { EOL } from 'os'\nimport { isFunction, indent } from './'\nimport Test from './Test'\n\n/**\n * @param {!TestSuite} ts\n */\nfunction hasParent({ parent }) {\n  return parent instanceof TestSuite\n}\n\n/**\n * @param {!Array<string>} names\n */\nconst hasFocused = names => names.some(n => n.startsWith('!'))\n\n/**\n * Returns the full array of names within a test suite.\n * @param {!Array<!(TestSuite|Test)>} tests\n */\nconst getChildrenNames = (tests) => {\n  return tests.reduce((acc, test) => {\n    if (test instanceof TestSuite) {\n      return [...acc, test.name, ...test.names]\n    }\n    return [...acc, test.name]\n  }, [])\n}\n\n/**\n * A test suite is a collection of tests with any number of contexts.\n * @implements {_contextTesting.TestSuite}\n */\nexport default class TestSuite {\n  /**\n   * @param {string} name\n   * @param {!Object} tests\n   * @param {TestSuite} [parent] The parent test suite, or null.\n   * @param {*} [context]\n   * @param {number} [timeout]\n   */\n  constructor (name, tests, parent, context, timeout) {\n    if (!name) throw new Error('Test suite name must be given.')\n\n    this._name = name\n    this._parent = parent\n    this._timeout = timeout || (hasParent(this) ? this.parent.timeout : undefined)\n\n    this._persistentContext = undefined\n    this._context = undefined\n\n    if (!this._assignContext(context) && hasParent(this)) {\n      this._context = parent.context\n    }\n\n    if (typeof tests != 'object')\n      throw new Error('You must provide tests in an object.')\n\n    this._hasFocused = false\n    /** @type {Array<!(TestSuite|Test)>} */\n    this._tests = []\n    /** @type {!Array<string>} */\n    this._names = []\n    this._rawTests = {}\n\n    this._assignTests(tests)\n  }\n  get name() {\n    return this._name\n  }\n  get parent() {\n    return this._parent\n  }\n  get rawTests() {\n    return this._rawTests\n  }\n  /**\n   * @type {Array<!(Test|TestSuite)>}\n   */\n  get tests() {\n    return this._tests\n  }\n  get context() {\n    return this._context\n  }\n  get timeout() {\n    return this._timeout\n  }\n  _assignPersistentContext(context) {\n    if (Array.isArray(context)) {\n      this._persistentContext = context\n      return true\n    }\n    const fn = isFunction(context)\n    if (fn) {\n      this._persistentContext = context\n      return true\n    }\n  }\n\n  _assignContext(context) {\n    if (Array.isArray(context)) {\n      this._context = context\n      return true\n    }\n    const fn = isFunction(context)\n    if (fn) {\n      this._context = context\n      return true\n    }\n    if ((typeof context).toLowerCase() == 'object') {\n      const extendedContext = {\n        ...(this._context || {}),\n        ...context,\n      } // this is for when test suites are extending object contexts\n      this._context = Object.freeze(extendedContext)\n      return true\n    }\n  }\n\n  /**\n   * Whether test suite has focused tests.\n   */\n  get hasFocused(){\n    return this._hasFocused\n  }\n\n  /** */\n  _assignTests(t) {\n    const { 'context': context, 'persistentContext': persistentContext, ...tests } = t\n    if (context !== undefined) {\n      this._assignContext(context)\n    }\n    if (persistentContext !== undefined) {\n      this._assignPersistentContext(persistentContext)\n    }\n    this._rawTests = tests\n    this._tests = createTests(tests, this)\n\n    this._names = getChildrenNames(this._tests)\n    this._hasFocused = hasFocused(this._names)\n  }\n\n  /**\n   * @returns {!Array<string>} An array with all recursively gathered test and test suite names inside of the test suite.\n   */\n  get names() {\n    return this._names\n  }\n  get isFocused() {\n    return this.name.startsWith('!')\n  }\n\n  // /**\n  //  * Run without notifying of itself.\n  //  * @param {!Function} [notify] A notify function to be passed to run method.\n  //  * @param {boolean} [onlyFocused = false] Run only focused tests.\n  //  */\n  // async run(notify = () => {}, onlyFocused) {\n  //   // This should be deprecated, tests and test suites are run with `lib/run-test.js`.\n  //   console.log(c('Deprecated method TestSuite.run', 'red'))\n  //   let pc\n  //   if (this._persistentContext) {\n  //     pc = await evaluatePersistentContext(this._persistentContext)\n  //     bindContexts(this.tests, [pc])\n  //   }\n  //   const res = await runTestSuiteAndNotify(notify, [], '', [], {\n  //     name: this.name,\n  //     tests: this.tests,\n  //   }, onlyFocused)\n  //   if (pc) {\n  //     await destroyPersistentContext(pc)\n  //   }\n  //   return res\n  // }\n  dump() {\n    const str = this.name + EOL + this.tests\n      .map(test => test.dump())\n      .join('\\n')\n    return this.parent ? indent(str, '    ') : str\n  }\n  /**\n   * The persistent context.\n   */\n  get persistentContext() {\n    return this._persistentContext\n  }\n}\n\nconst sortTestSuites = ({ name: a }, { name: b }) => {\n  if (a == 'default') return -1\n  if (b == 'default') return 1\n  return 0\n}\n\n/**\n * Sort tests and test suites so that tests run before test suites. Deliberately don't use V8's unstable Array.sort().\n * @param {!Array<!Test|!TestSuite>} tests - test cases and test suites to sort\n * @returns {!Array<!Test|!TestSuite>} Sorted array with tests before test suites.\n */\nfunction sort(tests) {\n  const testSuites = []\n  const testCases = []\n  tests.forEach((test) => {\n    if (test instanceof Test) {\n      testCases.push(test)\n    } else {\n      testSuites.push(test)\n    }\n  })\n  const sts = testSuites.sort(sortTestSuites)\n  return [...testCases, ...sts]\n}\n\n/**\n * Map object with test names as keys and test functions as values\n * to an array of tests.\n * @param {!Object} object - a raw tests map as found in test files\n * @param {TestSuite} parent - parent test suite\n * @return {!Array<!(Test|TestSuite)>} An array with tests and test suites.\n */\nfunction createTests(object, parent) {\n  const tests = Object.keys(object)\n    .map((key) => {\n      const v = object[key]\n      if (v instanceof TestSuite) return v\n      switch (typeof v) {\n      case 'function': {\n        const test = new Test(key, v, parent.timeout, parent.context)\n        return test\n      }\n      case 'object': {\n        const ts = new TestSuite(key, v, parent)\n        return ts\n      }\n      }\n    })\n    .filter(t => t)\n  return sort(tests)\n}","import { lstat, readdir } from 'fs'\nimport { resolve, join, relative } from 'path'\nimport makePromise from 'makepromise'\nimport { c, b } from 'erte'\nimport TestSuite from './TestSuite'\nimport { replaceFilename } from './'\n\n/**\n * Remove modules cached by require.\n */\nexport function clearRequireCache() {\n  Object.keys(/** @type {!Object} */ (require.cache)).forEach((key) => {\n    const p = relative('', key)\n    if (!p.startsWith('node_modules') && key != require.resolve('../')) {\n      delete require.cache[key]\n    }\n  })\n}\n\n/**\n * Create a root test suite.\n * @param {!Array<string>} paths\n * @param {number} timeout\n */\nexport const buildRootTestSuite = async (paths, timeout) => {\n  const tree = await paths.reduce(async (acc, path) => {\n    const accRes = await acc\n    const r = await requireTests(path)\n    if (!r) return accRes\n    return {\n      ...accRes,\n      [path]: r,\n    }\n  }, {})\n  const ts = new TestSuite(\n    'Zoroaster Root Test Suite', tree, null, undefined, timeout,\n  )\n  return ts\n}\n\n/**\n * Recursively construct Test Suites tree from a directory path.\n * @param {string} dir Path to the directory.\n * @todo filter out non-js files\n */\nexport async function buildDirectory(dir) {\n  const content = /** @type {!Array<string>} */\n    (await makePromise(readdir, dir))\n  const res = content.reduce(async (acc, node) => {\n    const accRes = await acc\n    const path = join(dir, node)\n    const stat = /** @type {fs.Stats} */ (await makePromise(lstat, path))\n    let r\n    let name\n    if (stat.isFile()) {\n      const p = resolve(path)\n      r = require(p) // await import(p)\n      name = replaceFilename(node)\n    } else if (stat.isDirectory()) {\n      r = await buildDirectory(path)\n      name = node\n    }\n    if (accRes[name]) {\n      // to avoid that, could keep the filenames here,\n      // but don't print them in the reporter\n      console.warn('Merging %s with %s in %s', name, node, dir)\n      accRes[name] = safeMerge(accRes[name], r)\n      return accRes\n    } else {\n      return {\n        ...accRes,\n        [name]: r,\n      }\n    }\n  }, {})\n  return res\n}\n\nconst safeMerge = (one, two) => {\n  Object.keys(two).forEach((key) => {\n    if (one[key]) {\n      throw new Error(`Duplicate key ${key}`)\n    }\n  })\n  const res = {\n    ...one,\n    ...two,\n  }\n  return res\n}\n\n/**\n * Recursively load a file/directory tests as a tree into memory.\n * @param {string} path Path to a test suite\n */\nasync function requireTests(path) {\n  try {\n    const res = /** @type {fs.Stats} */ (await makePromise(lstat, path))\n    if (res.isFile()) {\n      const p = resolve(path)\n      const tests = require(p)\n      return tests\n    } else if (res.isDirectory()) {\n      const dir = await buildDirectory(path)\n      return dir\n    }\n  } catch (err) {\n    // file or directory does not exist\n    const m = c('Could not require ', 'red') + b(c(path, 'white'), 'red')\n    err.message += `\\n${m}`\n    throw err\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('fs').Stats} fs.Stats\n */","import { watchFile, unwatchFile } from 'fs'\nimport Catchment from 'catchment'\nimport { EOL } from 'os'\nimport { resolve } from 'path'\nimport { c } from 'erte'\nimport {\n  createErrorTransformStream,\n  createProgressTransformStream,\n  createTestSuiteStackStream,\n} from './stream'\nimport { buildRootTestSuite, clearRequireCache } from './bin'\nimport { runInSequence } from './run-test'\n\nfunction watchFiles(files, callback) {\n  files.forEach((file) => {\n    // console.log(`Watching ${file} for changes...`)\n    watchFile(file, (...args) => {\n      callback(file, ...args)\n    })\n  })\n}\nfunction unwatchFiles(files) {\n  files.forEach((file) => {\n    // console.log(`Unwatching ${file}`)\n    unwatchFile(file)\n  })\n}\n\n/**\n * The main method to run tests and test suites.\n * @param {Object} params\n * @param {!Array<string>} params.paths Paths to test suites.\n * @param {boolean} [params.watch] Whether to watch files for changes.\n * @param {Object} serviceParams The params used privately by this method for recursion.\n * @param {!Array<string>} [serviceParams._currentlyWatching]\n * @param {Function} [serviceParams.exitListener]\n */\nexport default async function run({\n  paths,\n  watch,\n  timeout,\n  snapshot,\n  snapshotRoot,\n  interactive,\n}, {\n  _currentlyWatching = [],\n  exitListener,\n} = {}) {\n  unwatchFiles(_currentlyWatching)\n  if (exitListener) process.removeListener('beforeExit', exitListener)\n\n  const rootTestSuite = await buildRootTestSuite(paths, timeout)\n\n  const stack = createTestSuiteStackStream()\n\n  const rs = createErrorTransformStream()\n  const ts = createProgressTransformStream()\n  stack.pipe(ts).pipe(process.stdout)\n  stack.pipe(rs)\n\n  const { promise: errorsPromise } = new Catchment({ rs })\n\n  const count = {\n    total: 0,\n    error: 0,\n  }\n\n  const notify = (data) => {\n    if (typeof data != 'object') return\n    stack.write(data)\n    if (data.type == 'test-end') {\n      count.total++\n      if (data.error) {\n        count.error++\n      }\n    }\n  }\n  const options = {\n    snapshot, snapshotRoot, interactive,\n  }\n  await runInSequence(notify, [], rootTestSuite.tests, rootTestSuite.hasFocused, options)\n\n  stack.end()\n  const errorsCatchment = await errorsPromise\n  process.stdout.write(EOL)\n  process.stdout.write(errorsCatchment)\n\n  process.stdout.write(`\ud83e\udd85  Executed ${count.total} test${count.total == 1 ? '' : 's'}`)\n  if (count.error) {\n    process.stdout.write(\n      `: ${count.error} error${count.error > 1 ? 's' : ''}`\n    )\n  }\n  process.stdout.write(`.${EOL}`)\n\n  const newExitListener = () => {\n    process.exit(count.error)\n  }\n  process.once('beforeExit', newExitListener)\n\n  if (watch) {\n    const newCurrentlyWatching = Object.keys(require.cache).filter((c) => {\n      return !c.startsWith(`${process.cwd()}/node_modules/`)\n    })\n    watchFiles(newCurrentlyWatching, async (file, stats) => {\n      const pp = paths.filter((p) => {\n        const P = resolve(p)\n        if (P == file && !stats.mtime.getTime()) {\n          console.warn('Test suite file %s was deleted.', c(p, 'yellow'))\n          return false\n        }\n        return true\n      })\n      clearRequireCache()\n      // we can also re-run only changed test suites\n      await run({\n        paths: pp,\n        watch,\n        timeout,\n        snapshot,\n        snapshotRoot,\n        interactive,\n      }, {\n        _currentlyWatching: newCurrentlyWatching,\n        exitListener: newExitListener,\n      })\n    })\n  }\n}\n\nconst memory = () => {\n  const used = process.memoryUsage().heapUsed / 1024 / 1024\n  console.log(`Memory usage: ${Math.floor(used*1000)/1000} MB`)\n}\n// memory()\n// setInterval(memory, 1000)","/**\n * Generate a usage string.\n * @param {!_usually.Config} config The configuration object.\n * @param {!Object<string, string>} config.usage The map with possible arguments (flags, options) and their information.\n * @param {string} [config.description] What does the program do?\n * @param {string} [config.line] The summary of the program in one line.\n * @param {string} [config.example] The example of the program usage.\n * @example\n```\nimport usually from 'usually'\n\nconst res = usually({\n  usage: {\n    '-h': 'print help',\n    '-c': 'execute this command',\n  },\n  description: 'A test command-line application',\n  line: 'usually [-c command|command2] [-h]',\n  example: 'usually -c command2',\n})\n// A test command-line application\n//\n//  usually [-c command|command2] [-h]\n//\n//        -h      print help\n//        -c      execute this command\n//\n//  Example:\n//\n//    usually -c command2\n//\n```\n */\nexport default function usually(config = { usage: {} }) {\n  const {\n    usage = {},\n    description,\n    line,\n    example,\n  } = config\n  const commands = Object.keys(usage)\n  const descriptions = Object.values(usage)\n\n  const [commandLength] = commands.reduce(([longestName = 0, longestDescription = 0], name) => {\n    const command = usage[name]\n    const theLongest = command.split('\\n')\n      .reduce((acc, c) => {\n        if (c.length > acc) return c.length\n        return acc\n      }, 0)\n    if (theLongest > longestDescription) longestDescription = theLongest\n    if (name.length > longestName) longestName = name.length\n    return [longestName, longestDescription]\n  }, [])\n\n  const pad = (string, length) => {\n    const l = length - string.length\n    const ts = ' '.repeat(l)\n    const s = `${string}${ts}`\n    return s\n  }\n\n  const usa = commands.reduce((acc, command, i) => {\n    const value = descriptions[i]\n    const vals = value.split('\\n')\n    const c = pad(command, commandLength)\n    const [firstVal, ...otherVals] = vals\n    const firstLine = `${c}\\t${firstVal}`\n    const emptyPad = pad('', commandLength)\n    const otherLines = otherVals.map(val => {\n      const r = `${emptyPad}\\t${val}`\n      return r\n    })\n    const res = [...acc, firstLine, ...otherLines]\n    return res\n  }, [])\n\n  const USA = usa.map(a => `\\t${a}`)\n  const s = [\n    description,\n    `  ${line || ''}`,\n  ].filter(l => l ? l.trim() : l).join('\\n\\n')\n  const u = `${s ? `${s}\\n` : ''}\n${USA.join('\\n')}\n`\n\n\n  if (example) {\n    return `${u}\n  Example:\n\n    ${example}\n`\n  }\n\n  return u\n}\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_usually.Config} Config The configuration object.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _usually.Config The configuration object.\n * @prop {!Object<string, string>} usage The map with possible arguments (flags, options) and their information.\n * @prop {string} [description] What does the program do?\n * @prop {string} [line] The summary of the program in one line.\n * @prop {string} [example] The example of the program usage.\n */\n","import usually from 'usually'\n\nexport default (usage) => {\n  const res = usually({\n    usage,\n    description: `A testing framework with support for test contexts and masks.\nAutomatically transpiles import/export and JSX with \u00c0LaMode.\nhttps://artdecocode.com/zoroaster/`,\n    line: 'zoroaster path [pathN] [-w] [-ab] [-sr] [-vh]',\n    example: 'zoroaster test/spec test/mask -a',\n  })\n  return res\n}"],
"names":["EOL","homedir","os","extractPathRegex","pathRegex","homeDir","cleanStack","stack","pretty","ignoredModules","j","join","re","RegExp","source","replace","split","filter","x","pathMatches","match","includes","test","trim","map","m","p1","find","argv","long","short","bool","number","i","findIndex","a","value","slice","startsWith","parseInt","findTitles","titles","length","push","reduceUsage","argsConfig","Object","keys","reduce","acc","key","val","k","command","d","description","default","multiple","boolean","args","argufy","config","process","commandFound","res","_argv","err","undefined","r","_tests","_alamode","_babel","_watch","_timeout","_snapshot","_snapshotRoot","_interactive","_version","_help","dirname","relative","resolve","path","createReadStream","createWriteStream","lstat","mkdir","readdir","rmdir","unlink","unwatchFile","watchFile","fs","$jscompDefaultExport","stream","Transform","Writable","getStackSegment","from","oneLine","splitStack","item","items","getEntryStack","transparent","stackSegment","getCallerFromArguments","caller","makeCallback","entryCaller","entryStack","shadow","cb","messageOrError","arguments","errorStack","Error","calleeStackLine","message","isError","stackMessage","stackHeading","assign","e","properties","erotic","pipeError","streamA","streamB","once","emit","Catchment","options","binary","rs","er","proxyError","wrap","_","opts","_caughtData","_promise","Promise","on","Buffer","concat","indexOf","pipe","chunk","encoding","callback","collect","readable","promise","pushComponent","components","added","removed","last","count","extractCommon","basePath","newString","oldString","diagonalPath","newLen","oldLen","newPos","oldPos","commonCount","equals","removeEmpty","array","ret","diff","Diff","editLength","maxEditLength","bestPath","addPath","removePath","canAdd","canRemove","self","buildValues","left","right","chars","componentPos","componentLen","component","tmp","v","oldValue","lastComponent","pop","colors","backgroundColors","c","string","color","cc","b","erte","target","s","p","t","indent","str","padding","filterStack","error","name","regex","resIndex","element","joinedStack","TICK","CROSS","createTestSuiteStackStream","testSuiteStack","ts","objectMode","transform","type","props","createProgressTransformStream","result","Array","createErrorTransformStream","checkArgumentIndex","makePromise","fn","resolveValue","fnLength","reject","allArgs","isArray","forEach","arg","createTimeout","desc","timeout","setTimeout","makeTimeoutPromise","to","createPromiseWithTimeout","toPromise","race","clearTimeout","_evaluateContexts","contexts","ep","evaluateContext","all","context","toLowerCase","call","_init","Proxy","get","bind","destroyContexts","dc","_destroy","runTest","persistentContext","onCatchment","started","Date","destroyResult","evaluatedContexts","eEvaluated","then","promto","Stream","catchment","destroy","awaitEvaluations","finished","ee","reducer","tests","onlyFocused","runTestSuite","allCanRun","newState","isFocused","hasFocused","accRes","deepStrictEqual","equal","assert","createInterface","readline","ask","question","password","output","stdout","input","stdin","rl","rest","o","write","repeat","tryPromise","close","askQuestions","questions","text","endsWith","gotDefaultValue","defaultValue","getDefault","dv","gtd","answer","validation","postProcess","confirm","defaultYes","hasQ","inspect","util","log","differently","objectA","objectB","level","was","became","toString","w","writeCommon","propName","compare","getTime","isPrimitive","constructor","valA","valueOf","valB","updated","ca","Boolean","common","R","A","ad","written","u","RA","console","read","data","ws","end","ensurePath","dir","make","code","parentDir","pad","width","Math","max","paddys","l","frameOfMind","ww","bt","bb","pp","line","save","snapshot","snapshotsDir","JSON","stringify","promptAndSave","actual","prompt","interactive","json","expected","erteString","upd","SnapshotContext","maxWidth","current","isTTY","columns","frame","parse","exists","ls","lstatFiles","dirPath","dirContent","readFiles","relativePath","isDirectory","lstatRes","isNotDirectory","readDirStructure","lsr","directories","files","notDirectories","isFile","isSymbolicLink","dirs","structure","content","removeFile","removeDir","filesFullPaths","file","dirsFullPaths","rm","removeFocus","n","handleSnapshot","snapshotDir","snapshotRoot","extension","nn","isString","snapshotFilename","ext","root","rr","snapshotPath","sc","op","otherSnapshot","throwError","Zoroaster","require","runTestAndNotify","notify","snapshotSource","serialise","tc","prototype","testContext","ttc","h","testError","removeListener","dumpResult","runTestSuiteAndNotify","pc","evaluatePersistentContext","bindContexts","newPath","runInSequence","destroyPersistentContext","evalContext","destroyContext","testSuite","Test","hasParent","parent","TestSuite","names","some","getChildrenNames","_assignContext","_context","extendedContext","freeze","_name","_parent","_persistentContext","_hasFocused","_names","_assignTests","createTests","dump","sortTestSuites","sort","testSuites","testCases","sts","object","clearRequireCache","cache","buildRootTestSuite","paths","tree","requireTests","buildDirectory","node","stat","warn","safeMerge","one","two","watchFiles","unwatchFiles","run","watch","_currentlyWatching","exitListener","rootTestSuite","errorsPromise","total","errorsCatchment","newExitListener","exit","newCurrentlyWatching","cwd","stats","P","mtime","usually","usage","example","commands","descriptions","values","commandLength","longestName","longestDescription","theLongest","USA","usa","vals","firstVal","otherVals","firstLine","emptyPad","otherLines","version"]
}
