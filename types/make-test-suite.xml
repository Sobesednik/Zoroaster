<types>
  <type name="Context" desc="A context made with a constructor.">
    <prop opt name="_init" type="() => void">A function to initialise the context.</prop>
    <prop opt name="_destroy" type="() => void">A function to destroy the context.</prop>
  </type>
  <type name="MakeTestSuiteConf" desc="Configuration for making test suites.">
    <prop opt name="context" type="({new(): Context}|{new(): Context}[]|{})">
      Single or multiple context constructors or objects to initialise for each test.
    </prop>
    <prop opt name="getResults" type="(input: string, ...contexts?: Context[]) => string">
      A function which should return results of a test.
    </prop>
    <prop opt name="getThrowsConfig" type="(input: string, ...contexts?: Context[]) => { fn: function, args?: any[], message?: (string|RegExp) }">
      A function which should return a configuration for [`assert-throws`](https://github.com/artdecocode/assert-throws), including `fn` and `args`, when testing an error.
    </prop>
    <prop opt name="mapActual" type="(results: any) => string">
      An optional function to get a value to test against `expected` mask property from results. By default, the full result is used.
    </prop>
    <prop opt name="assertResults" type="(results: any, props: Object.<string, (string|object)>) => void">
      A function containing any addition assertions on the results. The results from `getResults` and a map of expected values extracted from the mask using `customProps` and `jsonProps` will be passed as first and second arguments.
    </prop>
    <prop opt name="customProps" type="string[]">
      An array of custom properties' names to extract from the mask.
    </prop>
    <prop opt name="jsonProps" type="string[]">
      Any additional properties to extract from the mask, and parse as _JSON_ values.
    </prop>
  </type>
</types>