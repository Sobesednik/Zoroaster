{"version":3,"sources":["../../src/lib/index.js"],"names":[],"mappings":"AAAA,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK;AAC5C,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;;AAEvB,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;EACnC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO;AAC3C;;AAEA,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;EAChC,MAAM,CAAC;IACL,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACb;;;;;;AAMA,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC3C,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACV,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;EAC1E;EACA,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;;EAG1C,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;EAC7C,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EACxE,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3D,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC;EACjE,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG;AACjC;;AAEA,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;EAC7B,MAAM,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ;AAC/C;;AAEA,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EAChD,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO;EAC7B,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC;;EAEhB,GAAG,CAAC;IACF,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACpB,MAAM,CAAC;EACT,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;IACZ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;MAC3C,KAAK,CAAC;IACR;;IAEA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC;IACtB,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;MACX,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;IAChB;;IAEA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;MACrB,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;QACf,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC;QAC1B,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;UACpC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM;QAChC;QACA,MAAM,CAAC,MAAM,CAAC,GAAG;MACnB,CAAC;IACH,CAAC;;IAED,MAAM,CAAC;EACT;AACF;;AAEA,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACjD,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;MAC1B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC;MAC7B,MAAM,CAAC;IACT;EACF,CAAC;EACD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;EAChC,MAAM,CAAC;AACT","file":"lib/index.js","sourcesContent":["import cleanStack from '@artdeco/clean-stack'\nimport { EOL } from 'os'\n\nexport function indent(str, padding) {\n  return str.replace(/^(?!\\s*$)/mg, padding)\n}\n\nexport function getPadding(level) {\n  return Array\n    .from({ length: level * 2 })\n    .join(' ')\n}\n\n/**\n * Get clean stack for a test, without Node internals\n * @param {Test} test - test\n */\nexport function filterStack({ error, name }) {\n  if (!error) {\n    throw new Error('cannot filter stack when a test does not have an error')\n  }\n  const splitStack = error.stack.split('\\n') // break stack by \\n and not EOL intentionally because Node uses \\n\n  // node 4 will print: at test_suite.test2\n  // node 6 will print: at test2\n  const regex = new RegExp(`at (.+\\\\.)?${name}`)\n  const resIndex = splitStack.findIndex(element => regex.test(element)) + 1\n  const joinedStack = splitStack.slice(0, resIndex).join('\\n')\n  const stack = joinedStack ? joinedStack : cleanStack(error.stack) // use clean stack for async errors\n  return stack.replace(/\\n/g, EOL)\n}\n\nexport function isFunction(fn) {\n  return (typeof fn).toLowerCase() == 'function'\n}\n\nexport const evaluateContext = async (context) => {\n  const fn = isFunction(context)\n  if (!fn) return context\n\n  try {\n    const c = {}\n    await context.call(c)\n    return c\n  } catch (err) {\n    if (!/^Class constructor/.test(err.message)) {\n      throw err\n    }\n    // constructor context\n    const c = new context()\n    if (c._init) {\n      await c._init()\n    }\n\n    const p = new Proxy(c, {\n      get(target, key) {\n        if (key == 'then') return target\n        if (typeof target[key] == 'function') {\n          return target[key].bind(target)\n        }\n        return target[key]\n      },\n    })\n\n    return p\n  }\n}\n\nexport const destroyContexts = async (contexts) => {\n  const dc = contexts.map(async (c) => {\n    if (isFunction(c._destroy)) {\n      const res = await c._destroy()\n      return res\n    }\n  })\n  const res = await Promise.all(dc)\n  return res\n}"]}