{"version":3,"sources":["../../src/lib/TestSuite.js"],"names":[],"mappings":"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","file":"lib/TestSuite.js","sourcesContent":["import { EOL } from 'os'\nimport { isFunction, indent } from '.'\nimport Test from './Test'\n\nfunction hasParent({ parent }) {\n  return parent instanceof TestSuite\n}\n\n/**\n * @param {string[]} names\n */\nconst hasFocused = names => names.some(n => n.startsWith('!'))\n\n/**\n *\n * @param {(TestSuite|Test)[]} tests\n */\nconst getChildrenNames = (tests) => {\n  return tests.reduce((acc, test) => {\n    if (test instanceof TestSuite) {\n      return [...acc, test.name, ...test.names]\n    }\n    return [...acc, test.name]\n  }, [])\n}\n\n/**\n * A test suite is a collection of tests with any number of contexts.\n */\nexport default class TestSuite {\n  /**\n   * @constructor\n   * @param {string} name\n   * @param {object} tests\n   * @param {TestSuite} parent\n   * @param {object|function} context\n   * @param {number} timeout\n   */\n  constructor (name, tests, parent, context, timeout) {\n    if (!name) throw new Error('Test suite name must be given.')\n\n    this._name = name\n    this._selfFocused = this.name.startsWith('!')\n    this._parent = parent\n    this._timeout = timeout || (hasParent(this) ? this.parent.timeout : undefined)\n\n    if (!this._assignContext(context) && hasParent(this)) {\n      this._context = parent.context\n    }\n\n    if (typeof tests != 'object') {\n      throw new Error('You must provide tests in an object.')\n    }\n    this._assignTests(tests)\n  }\n  get path() {\n    return this._path\n  }\n  get name() {\n    return this._name\n  }\n  get parent() {\n    return this._parent\n  }\n  get rawTests() {\n    return this._rawTests\n  }\n  /**\n   * @type {Test[]|TestSuite[]}\n   */\n  get tests() {\n    return this._tests\n  }\n  get context() {\n    return this._context\n  }\n  get timeout() {\n    return this._timeout\n  }\n\n  _assignContext(context) {\n    if (Array.isArray(context)) {\n      this._context = context\n      return true\n    }\n    const fn = isFunction(context)\n    if (fn) {\n      this._context = context\n      return true\n    }\n    if ((typeof context).toLowerCase() == 'object') {\n      const extendedContext = {\n        ...(this._context || {}),\n        ...context,\n      } // this is for when test suites are extending object contexts\n      this._context = Object.freeze(extendedContext)\n      return true\n    }\n  }\n\n  /**\n   * Whether test suite has focused tests.\n   */\n  get hasFocused(){\n    return this._hasFocused\n  }\n\n  _assignTests(tests) {\n    if ('context' in tests) {\n      this._assignContext(tests.context)\n    }\n    this._rawTests = tests\n    this._tests = createTests(tests, this)\n\n    this._names = getChildrenNames(this._tests)\n    this._hasFocused = hasFocused(this._names)\n  }\n\n  /**\n   * @returns {string[]} An array with all recursively gathered test and test suite names inside of the test suite.\n   */\n  get names() {\n    return this._names\n  }\n  get isSelfFocused() {\n    return this._selfFocused\n  }\n\n  /**\n   * Run test suite.\n   */\n  async run(notify = () => {}, onlyFocused) {\n    const { name } = this\n    notify({ type:'test-suite-start', name })\n    const res = await this.runInSequence(notify, onlyFocused)\n    notify({ type:'test-suite-end', name })\n    return res\n  }\n  dump() {\n    const str = this.name + EOL + this.tests\n      .map(test => test.dump())\n      .join('\\n')\n    return this.parent ? indent(str, '    ') : str\n  }\n  hasErrors() {\n    return this.tests\n      .find(test =>\n        test.hasErrors()\n      )\n  }\n\n  /**\n   * Run all tests in sequence, one by one.\n   * @param {function} [notify] A notify function to be passed to run method.\n   * @param {boolean} [onlyFocused = false] Run only focused tests.\n   */\n  async runInSequence(notify, onlyFocused) {\n    await this.tests.reduce(async (acc, test) => {\n      const accRes = await acc\n      let res\n      if (!onlyFocused) {\n        res = await test.run(notify)\n      } else if (test instanceof Test && test.isFocused) {\n        res = await test.run(notify)\n      // a test suite\n      } else if (test.isSelfFocused) {\n        res = await test.run(notify, test.hasFocused)\n      } else if (test.hasFocused) {\n        res = await test.run(notify, true)\n      }\n      return [...accRes, res]\n    }, [])\n  }\n}\n\nconst sortTestSuites = ({ name: a }, { name: b }) => {\n  if (a == 'default') return -1\n  if (b == 'default') return 1\n  return 0\n}\n\n/**\n * Sort tests and test suites so that tests run before\n * test suites. We delibarately don't use V8's unstable\n * Array.sort().\n * @param {Array} tests - test cases and test suites to sort\n * @returns {Array} Sorted array with tests before test suites.\n */\nfunction sort(tests) {\n  const testSuites = []\n  const testCases = []\n  tests.forEach((test) => {\n    if (test instanceof Test) {\n      testCases.push(test)\n    } else {\n      testSuites.push(test)\n    }\n  })\n  const sts = testSuites.sort(sortTestSuites)\n  return [...testCases, ...sts]\n}\n\nfunction filterContextKey(key) {\n  return key != 'context'\n}\n\n/**\n * Map object with test names as keys and test functions as values\n * to an array of tests.\n * @param {object} object - a raw tests map as found in test files\n * @param {TestSuite} parent - parent test suite\n * @return {Array<Test>} An array with tests.\n */\nfunction createTests(object, parent) {\n  const tests = Object.keys(object)\n    .filter(filterContextKey)\n    .map((key) => {\n      const v = object[key]\n      if (v instanceof TestSuite) return v\n      switch (typeof v) {\n      case 'function': {\n        const test = new Test(key, v, parent.timeout, parent.context)\n        return test\n      }\n      case 'object': {\n        const ts = new TestSuite(key, v, parent)\n        return ts\n      }\n      }\n    })\n    .filter(t => t)\n  return sort(tests)\n}"]}