{"version":3,"sources":["../../src/bin/index.js"],"names":[],"mappings":"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","file":"bin/index.js","sourcesContent":["#!/usr/bin/env node\nimport { readdirSync, lstatSync, watchFile, unwatchFile } from 'fs'\nimport { join, resolve } from 'path'\nimport Catchment from 'catchment'\nimport { EOL } from 'os'\nimport TestSuite from '../lib/TestSuite'\nimport { runInSequence } from '../lib'\nimport { createErrorTransformStream, createProgressTransformStream, createTestSuiteStackStream } from '../lib/stream'\n\nconst watchFlags = ['--watch', '-w']\nconst babelFlags = ['--babel', '-b']\nconst alamodeFlags = ['--alamode', '-a']\nconst allFlags = [...watchFlags, ...babelFlags, ...alamodeFlags]\n\nconst replaceFilename = (filename) => {\n  return filename.replace(/\\.js$/, '')\n}\n\nfunction buildDirectory(dir) {\n  const content = readdirSync(dir)\n  const res = content.reduce((acc, node) => {\n    const path = join(dir, node)\n    const stat = lstatSync(path)\n    let r\n    let name\n    if (stat.isFile()) {\n      r = resolve(path)\n      name = replaceFilename(node)\n    } else if (stat.isDirectory()) {\n      r = buildDirectory(path)\n      name = node\n    }\n    return {\n      ...acc,\n      [name]: r,\n    }\n  }, {})\n  return res\n}\n\nfunction parseArgv(argv) {\n  const argvPath = resolve(argv)\n  try {\n    const res = lstatSync(argvPath)\n    if (res.isFile()) {\n      const ts = new TestSuite(argv, argvPath)\n      return ts\n    } else if (res.isDirectory()) {\n      const dir = buildDirectory(argv)\n      const ts = new TestSuite(argv, dir)\n      return ts\n    }\n  } catch (err) {\n    // file or directory does not exist\n    // eslint-disable-next-line\n    console.error(err)\n  }\n}\n\nconst resolveTestSuites = (args, ignore) => {\n  return args\n    .slice(2)\n    // ignore flags\n    .filter((a) => {\n      return ignore.indexOf(a) < 0\n    })\n    // create test suites and remove paths that cannot be resolved\n    .map(parseArgv)\n    .filter(testSuite => testSuite)\n}\n\nfunction watchFiles(files, callback) {\n  files.forEach((file) => {\n    // console.log(`Watching ${file} for changes...`)\n    watchFile(file, callback)\n  })\n}\nfunction unwatchFiles(files) {\n  files.forEach((file) => {\n    // console.log(`Unwatching ${file}`)\n    unwatchFile(file)\n  })\n}\n\n/**\n * Remove modules cached by require.\n */\nfunction clearRequireCache() {\n  Object.keys(require.cache).forEach((key) => {\n    delete require.cache[key]\n  })\n}\n\nfunction requireTestSuite(ts) {\n  return ts.require()\n}\n\nasync function test(testSuites, watch, currentlyWatching = []) {\n  clearRequireCache()\n  testSuites\n    .forEach(requireTestSuite)\n\n  if (watch) {\n    unwatchFiles(currentlyWatching)\n    const newCurrentlyWatching = Object.keys(require.cache)\n    watchFiles(newCurrentlyWatching, () => test(testSuites, watch, newCurrentlyWatching))\n  }\n\n  const stack = createTestSuiteStackStream()\n\n  const rs = createErrorTransformStream()\n  const ts = createProgressTransformStream()\n  stack.pipe(ts).pipe(process.stdout)\n  stack.pipe(rs)\n\n  const catchment = new Catchment({ rs })\n\n  const count = {\n    total: 0,\n    error: 0,\n  }\n\n  const notify = (data) => {\n    if (typeof data != 'object') return\n    stack.write(data)\n    if (data.type == 'test-end') {\n      count.total++\n      if (data.error) {\n        count.error++\n      }\n    }\n  }\n  await runInSequence(testSuites, notify)\n  stack.end()\n  const errorsCatchment = await catchment.promise\n  process.stdout.write(EOL)\n  process.stdout.write(errorsCatchment)\n\n  process.stdout.write(`🦅  Executed ${count.total} tests`)\n  if (count.error) {\n    process.stdout.write(\n      `: ${count.error} error${count.error > 1 ? 's' : ''}`\n    )\n  }\n  process.stdout.write(`.${EOL}`)\n\n  process.on('exit', () => process.exit(count.error))\n}\n\nconst watch = process.argv.some(a => watchFlags.indexOf(a) != -1)\nconst babel = process.argv.some(a => babelFlags.indexOf(a) != -1)\nconst alamode = process.argv.some(a => alamodeFlags.indexOf(a) != -1)\n\nif (babel) {\n  try {\n    require('@babel/register')\n  } catch (err) {\n    const p = resolve(process.cwd(), 'node_modules/@babel/register')\n    require(p)\n  }\n}\n\nif (alamode) {\n  require('alamode')()\n}\n\nconst testSuites = resolveTestSuites(process.argv, allFlags)\n\n;(async () => {\n  try {\n    await test(testSuites, watch)\n  } catch ({ message, stack }) {\n    if (process.env.DEBUG) console.log(stack) // eslint-disable-line no-console\n    console.error(message) // eslint-disable-line no-console\n    process.exit(1)\n  }\n})()\n"]}